package com.leateck.phase.wdmaterialidentification0100;

/**
 * This file is generated by the PhaseGenerator
 *
 * Please do not modify this file manually !!
 */

import com.datasweep.compatibility.client.ATRow;
import com.datasweep.compatibility.client.Response;
import com.rockwell.mes.services.s88.ifc.processdata.MESRtPhaseData;

import com.rockwell.mes.commons.base.ifc.utility.StringUtilsEx;
import com.rockwell.mes.services.s88equipment.ifc.IMESS88Equipment; 
import com.rockwell.mes.commons.base.ifc.objects.MESATObjectReferenceFieldHandler;
import com.datasweep.compatibility.client.MeasuredValue;

 /**
 * Generated class definition
 * <br/>Application table: LC_PhDatWDMatIdent0010
 */
public abstract class MESGeneratedRtPhaseDataWDMatIdent0010 extends MESRtPhaseData {

    /** Generated attribute definition */
    protected static final String ATDEFINITION_NAME = "LC_PhDatWDMatIdent0010";

    /** Generated reference field handler */
    private final MESATObjectReferenceFieldHandler<IMESS88Equipment> refSrcContainerObject =
            MESATObjectReferenceFieldHandler.createReferenceFieldHandler(this, IMESS88Equipment.class, "LC_srcContainerObject");

    @Override
    public String getATDefinitionName() {
        return ATDEFINITION_NAME;
    }

    /**
     * Generated constructor
     *
     * @param key The key of the ATRow to load.
     */
    public MESGeneratedRtPhaseDataWDMatIdent0010(long key) {
        super(key);
    }

    /**
     * Generated copy constructor
     *
     * @param source the source to copy.
     */
    public MESGeneratedRtPhaseDataWDMatIdent0010(MESGeneratedRtPhaseDataWDMatIdent0010 source) {
        super(source);

        this.refSrcContainerObject.initFromCopyConstructor(source.refSrcContainerObject);
    }

    /**
     * Generated constructor
     *
     * @param baseATRow The ATRow to wrap.
     */
    public MESGeneratedRtPhaseDataWDMatIdent0010(ATRow baseATRow) {
        super(baseATRow);
    }

    /**
     * Generated constructor
     */
    public MESGeneratedRtPhaseDataWDMatIdent0010() {
        super();
    }

    @Override
    protected void synchronizeAfterATRowRefresh() {
        super.synchronizeAfterATRowRefresh();

        this.refSrcContainerObject.synchronizeAfterATRowRefresh();
    }    
    
    /**
     * Generated method definition
     *
     * @return the requested value
     */
    public String getSublotIdentifier() {
        return StringUtilsEx.decodeStringForUI((String) this.dgtATRow.getValue("LC_sublotIdentifier"));
    }

    /**
     * Generated method definition
     *
     * @param value The new value to be assigned
     */
    public void setSublotIdentifier(String value) {
        String oldValue = this.getSublotIdentifier();
        this.dgtATRow.setValue("LC_sublotIdentifier", StringUtilsEx.encodeStringForDB(value));
        pcs.firePropertyChange("sublotIdentifier", oldValue, value);
    }
    
    /**
     * Generated method definition
     *
     * @return the requested value
     */
    public String getBatchIdentifier() {
        return StringUtilsEx.decodeStringForUI((String) this.dgtATRow.getValue("LC_batchIdentifier"));
    }

    /**
     * Generated method definition
     *
     * @param value The new value to be assigned
     */
    public void setBatchIdentifier(String value) {
        String oldValue = this.getBatchIdentifier();
        this.dgtATRow.setValue("LC_batchIdentifier", StringUtilsEx.encodeStringForDB(value));
        pcs.firePropertyChange("batchIdentifier", oldValue, value);
    }
    
    /**
     * Generated method definition
     *
     * @return the requested value
     */
    public String getSrcContainerId() {
        return StringUtilsEx.decodeStringForUI((String) this.dgtATRow.getValue("LC_srcContainerId"));
    }

    /**
     * Generated method definition
     *
     * @param value The new value to be assigned
     */
    public void setSrcContainerId(String value) {
        String oldValue = this.getSrcContainerId();
        this.dgtATRow.setValue("LC_srcContainerId", StringUtilsEx.encodeStringForDB(value));
        pcs.firePropertyChange("srcContainerId", oldValue, value);
    }
    
    /**
     * Generated method definition
     *
     * @return the requested value
     */
    public String getSrcContainerShortDesc() {
        return StringUtilsEx.decodeStringForUI((String) this.dgtATRow.getValue("LC_srcContainerShortDesc"));
    }

    /**
     * Generated method definition
     *
     * @param value The new value to be assigned
     */
    public void setSrcContainerShortDesc(String value) {
        String oldValue = this.getSrcContainerShortDesc();
        this.dgtATRow.setValue("LC_srcContainerShortDesc", StringUtilsEx.encodeStringForDB(value));
        pcs.firePropertyChange("srcContainerShortDesc", oldValue, value);
    }
    
    /**
     * Generated method definition
     *
     * @return the requested value
     */
    public IMESS88Equipment getSrcContainerObject() {
        return this.refSrcContainerObject.getReference();
    }

    /**
     * Generated method definition
     *
     * @param value The new value to be assigned
     */
    public void setSrcContainerObject(IMESS88Equipment value) {
        this.refSrcContainerObject.setReference(value, pcs, "srcContainerObject");
    }

    /**
     * Generated method definition
     *
     * @return the requested value
     */
    public MeasuredValue getOriginalQuantity() {
        return (MeasuredValue) this.dgtATRow.getValue("LC_originalQuantity");
    }

    /**
     * Generated method definition
     *
     * @param value The new value to be assigned
     */
    public void setOriginalQuantity(MeasuredValue value) {
        MeasuredValue oldValue = this.getOriginalQuantity();
        this.dgtATRow.setValue("LC_originalQuantity", value);
        pcs.firePropertyChange("originalQuantity", oldValue, value);
    }

    /**
     * Generated method definition
     *
     * @return the requested value
     */
    public MeasuredValue getPlannedQuantity() {
        return (MeasuredValue) this.dgtATRow.getValue("LC_plannedQuantity");
    }

    /**
     * Generated method definition
     *
     * @param value The new value to be assigned
     */
    public void setPlannedQuantity(MeasuredValue value) {
        MeasuredValue oldValue = this.getPlannedQuantity();
        this.dgtATRow.setValue("LC_plannedQuantity", value);
        pcs.firePropertyChange("plannedQuantity", oldValue, value);
    }

    /**
     * Generated method definition
     *
     * @return the requested value
     */
    public MeasuredValue getNominalQuantity() {
        return (MeasuredValue) this.dgtATRow.getValue("LC_nominalQuantity");
    }

    /**
     * Generated method definition
     *
     * @param value The new value to be assigned
     */
    public void setNominalQuantity(MeasuredValue value) {
        MeasuredValue oldValue = this.getNominalQuantity();
        this.dgtATRow.setValue("LC_nominalQuantity", value);
        pcs.firePropertyChange("nominalQuantity", oldValue, value);
    }

    /**
     * Generated method definition
     *
     * @return the requested value
     */
    public MeasuredValue getPlannedPotency() {
        return (MeasuredValue) this.dgtATRow.getValue("LC_plannedPotency");
    }

    /**
     * Generated method definition
     *
     * @param value The new value to be assigned
     */
    public void setPlannedPotency(MeasuredValue value) {
        MeasuredValue oldValue = this.getPlannedPotency();
        this.dgtATRow.setValue("LC_plannedPotency", value);
        pcs.firePropertyChange("plannedPotency", oldValue, value);
    }

    /**
     * Generated method definition
     *
     * @return the requested value
     */
    public MeasuredValue getActualPotency() {
        return (MeasuredValue) this.dgtATRow.getValue("LC_actualPotency");
    }

    /**
     * Generated method definition
     *
     * @param value The new value to be assigned
     */
    public void setActualPotency(MeasuredValue value) {
        MeasuredValue oldValue = this.getActualPotency();
        this.dgtATRow.setValue("LC_actualPotency", value);
        pcs.firePropertyChange("actualPotency", oldValue, value);
    }

    /**
     * Generated method definition
     *
     * @return the requested value
     */
    public Long getPrintedSublotKey() {
        return (Long) this.dgtATRow.getValue("LC_printedSublotKey");
    }

    /**
     * Generated method definition
     *
     * @param value The new value to be assigned
     */
    public void setPrintedSublotKey(Long value) {
        Long oldValue = this.getPrintedSublotKey();
        this.dgtATRow.setValue("LC_printedSublotKey", value);
        pcs.firePropertyChange("printedSublotKey", oldValue, value);
    }

    /**
     * Generated method definition
     *
     * @return the requested value
     */
    public Long getOrderStepInputKey() {
        return (Long) this.dgtATRow.getValue("LC_orderStepInputKey");
    }

    /**
     * Generated method definition
     *
     * @param value The new value to be assigned
     */
    public void setOrderStepInputKey(Long value) {
        Long oldValue = this.getOrderStepInputKey();
        this.dgtATRow.setValue("LC_orderStepInputKey", value);
        pcs.firePropertyChange("orderStepInputKey", oldValue, value);
    }

    /**
     * Generated method definition
     *
     * @return the requested value
     */
    public String getMaterialIdentifier() {
        return StringUtilsEx.decodeStringForUI((String) this.dgtATRow.getValue("LC_materialIdentifier"));
    }

    /**
     * Generated method definition
     *
     * @param value The new value to be assigned
     */
    public void setMaterialIdentifier(String value) {
        String oldValue = this.getMaterialIdentifier();
        this.dgtATRow.setValue("LC_materialIdentifier", StringUtilsEx.encodeStringForDB(value));
        pcs.firePropertyChange("materialIdentifier", oldValue, value);
    }
    
    /**
     * Generated method definition
     *
     * @return the requested value
     */
    public String getMaterialShortDescr() {
        return StringUtilsEx.decodeStringForUI((String) this.dgtATRow.getValue("LC_materialShortDescr"));
    }

    /**
     * Generated method definition
     *
     * @param value The new value to be assigned
     */
    public void setMaterialShortDescr(String value) {
        String oldValue = this.getMaterialShortDescr();
        this.dgtATRow.setValue("LC_materialShortDescr", StringUtilsEx.encodeStringForDB(value));
        pcs.firePropertyChange("materialShortDescr", oldValue, value);
    }
    
    /**
     * Generated method definition
     *
     * @return the requested value
     */
    public String getMaterialType() {
        return StringUtilsEx.decodeStringForUI((String) this.dgtATRow.getValue("LC_materialType"));
    }

    /**
     * Generated method definition
     *
     * @param value The new value to be assigned
     */
    public void setMaterialType(String value) {
        String oldValue = this.getMaterialType();
        this.dgtATRow.setValue("LC_materialType", StringUtilsEx.encodeStringForDB(value));
        pcs.firePropertyChange("materialType", oldValue, value);
    }
    
    /**
     * Generated method definition
     *
     * @return the requested value
     */
    public Boolean getIsSplitPosition() {
        return (Boolean) this.dgtATRow.getValue("LC_isSplitPosition");
    }

    /**
     * Generated method definition
     *
     * @param value The new value to be assigned
     */
    public void setIsSplitPosition(Boolean value) {
        Boolean oldValue = this.getIsSplitPosition();
        this.dgtATRow.setValue("LC_isSplitPosition", value);
        pcs.firePropertyChange("isSplitPosition", oldValue, value);
    }

    /**
     * Generated method definition
     *
     * @return the requested value
     */
    public Long getSplitPosition() {
        return (Long) this.dgtATRow.getValue("LC_splitPosition");
    }

    /**
     * Generated method definition
     *
     * @param value The new value to be assigned
     */
    public void setSplitPosition(Long value) {
        Long oldValue = this.getSplitPosition();
        this.dgtATRow.setValue("LC_splitPosition", value);
        pcs.firePropertyChange("splitPosition", oldValue, value);
    }

    /**
     * Generated method definition
     *
     * @return the requested value
     */
    public Boolean getSublotIdentified() {
        return (Boolean) this.dgtATRow.getValue("LC_sublotIdentified");
    }

    /**
     * Generated method definition
     *
     * @param value The new value to be assigned
     */
    public void setSublotIdentified(Boolean value) {
        Boolean oldValue = this.getSublotIdentified();
        this.dgtATRow.setValue("LC_sublotIdentified", value);
        pcs.firePropertyChange("sublotIdentified", oldValue, value);
    }

    /**
     * Generated method definition
     *
     * @return the requested value
     */
    public String getWeighingType() {
        return StringUtilsEx.decodeStringForUI((String) this.dgtATRow.getValue("LC_weighingType"));
    }

    /**
     * Generated method definition
     *
     * @param value The new value to be assigned
     */
    public void setWeighingType(String value) {
        String oldValue = this.getWeighingType();
        this.dgtATRow.setValue("LC_weighingType", StringUtilsEx.encodeStringForDB(value));
        pcs.firePropertyChange("weighingType", oldValue, value);
    }
    
    /**
     * Generated method definition
     *
     * @return the requested value
     */
    public String getWeighingMethod() {
        return StringUtilsEx.decodeStringForUI((String) this.dgtATRow.getValue("LC_weighingMethod"));
    }

    /**
     * Generated method definition
     *
     * @param value The new value to be assigned
     */
    public void setWeighingMethod(String value) {
        String oldValue = this.getWeighingMethod();
        this.dgtATRow.setValue("LC_weighingMethod", StringUtilsEx.encodeStringForDB(value));
        pcs.firePropertyChange("weighingMethod", oldValue, value);
    }
    
    /**
     * Generated method definition
     *
     * @return the requested value
     */
    public MeasuredValue getActualQuantity() {
        return (MeasuredValue) this.dgtATRow.getValue("LC_actualQuantity");
    }

    /**
     * Generated method definition
     *
     * @param value The new value to be assigned
     */
    public void setActualQuantity(MeasuredValue value) {
        MeasuredValue oldValue = this.getActualQuantity();
        this.dgtATRow.setValue("LC_actualQuantity", value);
        pcs.firePropertyChange("actualQuantity", oldValue, value);
    }

    /**
     * Generated method definition
     *
     * @return the requested value
     */
    public String getTargetSublotIdent() {
        return StringUtilsEx.decodeStringForUI((String) this.dgtATRow.getValue("LC_targetSublotIdent"));
    }

    /**
     * Generated method definition
     *
     * @param value The new value to be assigned
     */
    public void setTargetSublotIdent(String value) {
        String oldValue = this.getTargetSublotIdent();
        this.dgtATRow.setValue("LC_targetSublotIdent", StringUtilsEx.encodeStringForDB(value));
        pcs.firePropertyChange("targetSublotIdent", oldValue, value);
    }
    
    /**
     * Generated method definition
     *
     * @return the requested value
     */
    public Boolean getIdentifiedOnly() {
        return (Boolean) this.dgtATRow.getValue("LC_identifiedOnly");
    }

    /**
     * Generated method definition
     *
     * @param value The new value to be assigned
     */
    public void setIdentifiedOnly(Boolean value) {
        Boolean oldValue = this.getIdentifiedOnly();
        this.dgtATRow.setValue("LC_identifiedOnly", value);
        pcs.firePropertyChange("identifiedOnly", oldValue, value);
    }

    /**
     * Generated method definition
     *
     * @return the requested value
     */
    public Boolean getDiffBatchIdentified() {
        return (Boolean) this.dgtATRow.getValue("LC_diffBatchIdentified");
    }

    /**
     * Generated method definition
     *
     * @param value The new value to be assigned
     */
    public void setDiffBatchIdentified(Boolean value) {
        Boolean oldValue = this.getDiffBatchIdentified();
        this.dgtATRow.setValue("LC_diffBatchIdentified", value);
        pcs.firePropertyChange("diffBatchIdentified", oldValue, value);
    }

    /**
     * Generated method definition
     *
     * @return the requested value
     */
    public Boolean getTargetContainerClosed() {
        return (Boolean) this.dgtATRow.getValue("LC_targetContainerClosed");
    }

    /**
     * Generated method definition
     *
     * @param value The new value to be assigned
     */
    public void setTargetContainerClosed(Boolean value) {
        Boolean oldValue = this.getTargetContainerClosed();
        this.dgtATRow.setValue("LC_targetContainerClosed", value);
        pcs.firePropertyChange("targetContainerClosed", oldValue, value);
    }

    @Override
    protected Response prepareATRowForSave() {
        // Check if transient references are valid and store the corresponding keys in the ATRow:
        Response res = super.prepareATRowForSave();

        this.refSrcContainerObject.prepareATRowForSave(res);

        return res;
    }

}
