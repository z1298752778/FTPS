package com.leateck.phase.wdmaterialidentification0100;

/**
 * This file is generated by the PhaseGenerator
 *
 * Please do not modify this file manually !!
 */
import java.util.List;

import com.datasweep.compatibility.client.DatasweepException;
import com.datasweep.compatibility.client.Server;
import com.rockwell.mes.commons.base.ifc.objects.MESATObject;
import com.rockwell.mes.commons.base.ifc.objects.MESATObjectFilter;
import com.rockwell.mes.commons.base.ifc.services.PCContext;
import com.rockwell.mes.services.s88.ifc.execution.IMESRtPhase;

import com.rockwell.mes.services.s88equipment.ifc.IMESS88Equipment; 


/**
 * Generated class definition
 */
public abstract class MESGeneratedRtPhaseOutputWDMatIdent0010Filter extends MESATObjectFilter  {

    /** Generated attribute definition */
    private static final long serialVersionUID = 1L;

    /** Generated attribute definition */
    private static final String ATDEFINITION_NAME = "LC_PhOutWDMatIdent0010";

    /**
     * Generated method definition
     *
     * @param server The Server object
     */
    public MESGeneratedRtPhaseOutputWDMatIdent0010Filter(Server server) {
        super(server, ATDEFINITION_NAME);
    }

    /**
     * Generated method definition
     *
     */
    public MESGeneratedRtPhaseOutputWDMatIdent0010Filter() {
        super(PCContext.getServerImpl(), ATDEFINITION_NAME);
    }

    /**
     * Generated method definition
     *
     * @return the list of the objects
     */
    @Override
    public List<MESRtPhaseOutputWDMatIdent0010> getFilteredObjects () {
        return MESATObject.getFilteredMESATObjectList(this, MESRtPhaseOutputWDMatIdent0010.class);
    }

    /**
     * Generated method definition
     *
     * @param value the value to be filtered for
     * @return the filter object
     * @throws DatasweepException the PC exception
     */
    public MESRtPhaseOutputWDMatIdent0010Filter forParentEqualTo(IMESRtPhase value) //
            throws DatasweepException {
        String columnName = MESRtPhaseOutputWDMatIdent0010.COL_NAME_PARENT;
        return (MESRtPhaseOutputWDMatIdent0010Filter) forColumnNameEqualTo(columnName, Long.valueOf(value.getKey()));
    }

    /**
     * Generated method definition
     *
     * @param value the value to be filtered for
     * @return the filter object
     * @throws DatasweepException the PC exception
     */
    public MESRtPhaseOutputWDMatIdent0010Filter forParentNotEqualTo(IMESRtPhase value) //
            throws DatasweepException {
        String columnName = MESRtPhaseOutputWDMatIdent0010.COL_NAME_PARENT;
        return (MESRtPhaseOutputWDMatIdent0010Filter) forColumnNameNotEqualTo(columnName, Long.valueOf(value.getKey()));
    }



    /**
     * Generated method definition
     *
     * @param value the value to be filtered for
     * @return the filter object
     * @throws DatasweepException the PC exception
     */
    public MESRtPhaseOutputWDMatIdent0010Filter forResultEqualTo(String value) //
            throws DatasweepException {
        return (MESRtPhaseOutputWDMatIdent0010Filter) forColumnNameEqualTo("LC_Result", value);
    }

    /**
     * Generated method definition
     *
     * @param value the value to be filtered for
     * @return the filter object
     * @throws DatasweepException the PC exception
     */
    public MESRtPhaseOutputWDMatIdent0010Filter forResultNotEqualTo(String value) //
            throws DatasweepException {
        return (MESRtPhaseOutputWDMatIdent0010Filter) forColumnNameNotEqualTo("LC_Result", value);
    }

    /**
     * Generated method definition
     *
     * @param value the value to be filtered for
     * @return the filter object
     * @throws DatasweepException the PC exception
     */
    public MESRtPhaseOutputWDMatIdent0010Filter forResultContaining(String value) //
            throws DatasweepException {
        return (MESRtPhaseOutputWDMatIdent0010Filter) forColumnNameContaining("LC_Result", value);
    }

    /**
     * Generated method definition
     *
     * @param value the value to be filtered for
     * @return the filter object
     * @throws DatasweepException the PC exception
     */
    public MESRtPhaseOutputWDMatIdent0010Filter forResultStartingWith(String value) //
            throws DatasweepException {
        return (MESRtPhaseOutputWDMatIdent0010Filter) forColumnNameStartingWith("LC_Result", value);
    }


    /**
     * Generated method definition
     *
     * @param value the value to be filtered for
     * @return the filter object
     * @throws DatasweepException the PC exception
     */
    public MESRtPhaseOutputWDMatIdent0010Filter forTargetClosedEqualTo(Boolean value) //
            throws DatasweepException {
        return (MESRtPhaseOutputWDMatIdent0010Filter) forColumnNameEqualTo("LC_TargetClosed", value);
    }

    /**
     * Generated method definition
     *
     * @param value the value to be filtered for
     * @return the filter object
     * @throws DatasweepException the PC exception
     */
    public MESRtPhaseOutputWDMatIdent0010Filter forTargetClosedNotEqualTo(Boolean value) //
            throws DatasweepException {
        return (MESRtPhaseOutputWDMatIdent0010Filter) forColumnNameNotEqualTo("LC_TargetClosed", value);
    }


    /**
     * Generated method definition
     *
     * @param value the value to be filtered for
     * @return the filter object
     * @throws DatasweepException the PC exception
     */
    public MESRtPhaseOutputWDMatIdent0010Filter forMFCPositionEqualTo(String value) //
            throws DatasweepException {
        return (MESRtPhaseOutputWDMatIdent0010Filter) forColumnNameEqualTo("LC_MFCPosition", value);
    }

    /**
     * Generated method definition
     *
     * @param value the value to be filtered for
     * @return the filter object
     * @throws DatasweepException the PC exception
     */
    public MESRtPhaseOutputWDMatIdent0010Filter forMFCPositionNotEqualTo(String value) //
            throws DatasweepException {
        return (MESRtPhaseOutputWDMatIdent0010Filter) forColumnNameNotEqualTo("LC_MFCPosition", value);
    }

    /**
     * Generated method definition
     *
     * @param value the value to be filtered for
     * @return the filter object
     * @throws DatasweepException the PC exception
     */
    public MESRtPhaseOutputWDMatIdent0010Filter forMFCPositionContaining(String value) //
            throws DatasweepException {
        return (MESRtPhaseOutputWDMatIdent0010Filter) forColumnNameContaining("LC_MFCPosition", value);
    }

    /**
     * Generated method definition
     *
     * @param value the value to be filtered for
     * @return the filter object
     * @throws DatasweepException the PC exception
     */
    public MESRtPhaseOutputWDMatIdent0010Filter forMFCPositionStartingWith(String value) //
            throws DatasweepException {
        return (MESRtPhaseOutputWDMatIdent0010Filter) forColumnNameStartingWith("LC_MFCPosition", value);
    }


    /**
     * Generated method definition
     *
     * @param value the value to be filtered for
     * @return the filter object
     * @throws DatasweepException the PC exception
     */
    public MESRtPhaseOutputWDMatIdent0010Filter forSublotIdentifierEqualTo(String value) //
            throws DatasweepException {
        return (MESRtPhaseOutputWDMatIdent0010Filter) forColumnNameEqualTo("LC_sublotIdentifier", value);
    }

    /**
     * Generated method definition
     *
     * @param value the value to be filtered for
     * @return the filter object
     * @throws DatasweepException the PC exception
     */
    public MESRtPhaseOutputWDMatIdent0010Filter forSublotIdentifierNotEqualTo(String value) //
            throws DatasweepException {
        return (MESRtPhaseOutputWDMatIdent0010Filter) forColumnNameNotEqualTo("LC_sublotIdentifier", value);
    }

    /**
     * Generated method definition
     *
     * @param value the value to be filtered for
     * @return the filter object
     * @throws DatasweepException the PC exception
     */
    public MESRtPhaseOutputWDMatIdent0010Filter forSublotIdentifierContaining(String value) //
            throws DatasweepException {
        return (MESRtPhaseOutputWDMatIdent0010Filter) forColumnNameContaining("LC_sublotIdentifier", value);
    }

    /**
     * Generated method definition
     *
     * @param value the value to be filtered for
     * @return the filter object
     * @throws DatasweepException the PC exception
     */
    public MESRtPhaseOutputWDMatIdent0010Filter forSublotIdentifierStartingWith(String value) //
            throws DatasweepException {
        return (MESRtPhaseOutputWDMatIdent0010Filter) forColumnNameStartingWith("LC_sublotIdentifier", value);
    }


    /**
     * Generated method definition
     *
     * @param value the value to be filtered for
     * @return the filter object
     * @throws DatasweepException the PC exception
     */
    public MESRtPhaseOutputWDMatIdent0010Filter forContIdEqualTo(String value) //
            throws DatasweepException {
        return (MESRtPhaseOutputWDMatIdent0010Filter) forColumnNameEqualTo("LC_contId", value);
    }

    /**
     * Generated method definition
     *
     * @param value the value to be filtered for
     * @return the filter object
     * @throws DatasweepException the PC exception
     */
    public MESRtPhaseOutputWDMatIdent0010Filter forContIdNotEqualTo(String value) //
            throws DatasweepException {
        return (MESRtPhaseOutputWDMatIdent0010Filter) forColumnNameNotEqualTo("LC_contId", value);
    }

    /**
     * Generated method definition
     *
     * @param value the value to be filtered for
     * @return the filter object
     * @throws DatasweepException the PC exception
     */
    public MESRtPhaseOutputWDMatIdent0010Filter forContIdContaining(String value) //
            throws DatasweepException {
        return (MESRtPhaseOutputWDMatIdent0010Filter) forColumnNameContaining("LC_contId", value);
    }

    /**
     * Generated method definition
     *
     * @param value the value to be filtered for
     * @return the filter object
     * @throws DatasweepException the PC exception
     */
    public MESRtPhaseOutputWDMatIdent0010Filter forContIdStartingWith(String value) //
            throws DatasweepException {
        return (MESRtPhaseOutputWDMatIdent0010Filter) forColumnNameStartingWith("LC_contId", value);
    }


    /**
     * Generated method definition
     *
     * @param value the value to be filtered for
     * @return the filter object
     * @throws DatasweepException the PC exception
     */
    public MESRtPhaseOutputWDMatIdent0010Filter forContObjectEqualTo(IMESS88Equipment value) //
            throws DatasweepException {
        return (MESRtPhaseOutputWDMatIdent0010Filter) forColumnNameEqualTo("LC_contObject", value);
    }

    /**
     * Generated method definition
     *
     * @param value the value to be filtered for
     * @return the filter object
     * @throws DatasweepException the PC exception
     */
    public MESRtPhaseOutputWDMatIdent0010Filter forContObjectNotEqualTo(IMESS88Equipment value) //
            throws DatasweepException {
        return (MESRtPhaseOutputWDMatIdent0010Filter) forColumnNameNotEqualTo("LC_contObject", value);
    }

}
