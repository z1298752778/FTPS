package com.leateck.phase.materialproduction0010;

/**
 * This file is generated by the PhaseGenerator
 *
 * Please do not modify this file manually !!
 */

import com.datasweep.compatibility.client.ATRow;
import com.datasweep.compatibility.client.Response;
import com.rockwell.mes.services.s88.ifc.processdata.MESRtPhaseData;

import com.rockwell.mes.commons.base.ifc.utility.StringUtilsEx;
import com.datasweep.compatibility.client.MeasuredValue;

 /**
 * Generated class definition
 * <br/>Application table: LC_PhDatLCMatProduce0010
 */
public abstract class MESGeneratedRtPhaseDataLCMatProduce0010
 extends MESRtPhaseData {

    /** Generated attribute definition */
    protected static final String ATDEFINITION_NAME = "LC_PhDatLCMatProduce0010";


    @Override
    public String getATDefinitionName() {
        return ATDEFINITION_NAME;
    }

    /**
     * Generated constructor
     *
     * @param key The key of the ATRow to load.
     */
    public MESGeneratedRtPhaseDataLCMatProduce0010(long key) {
        super(key);
    }

    /**
     * Generated copy constructor
     *
     * @param source the source to copy.
     */
    public MESGeneratedRtPhaseDataLCMatProduce0010(MESGeneratedRtPhaseDataLCMatProduce0010 source) {
        super(source);
    }

    /**
     * Generated constructor
     *
     * @param baseATRow The ATRow to wrap.
     */
    public MESGeneratedRtPhaseDataLCMatProduce0010(ATRow baseATRow) {
        super(baseATRow);
    }

    /**
     * Generated constructor
     */
    public MESGeneratedRtPhaseDataLCMatProduce0010() {
        super();
    }

    @Override
    protected void synchronizeAfterATRowRefresh() {
        super.synchronizeAfterATRowRefresh();
    }    
    
    /**
     * Generated method definition
     *
     * @return the requested value
     */
    public String getMaterialID() {
        return StringUtilsEx.decodeStringForUI((String) this.dgtATRow.getValue("LC_materialID"));
    }

    /**
     * Generated method definition
     *
     * @param value The new value to be assigned
     */
    public void setMaterialID(String value) {
        String oldValue = this.getMaterialID();
        this.dgtATRow.setValue("LC_materialID", StringUtilsEx.encodeStringForDB(value));
        pcs.firePropertyChange("materialID", oldValue, value);
    }
    
    /**
     * Generated method definition
     *
     * @return the requested value
     */
    public Boolean getIsHeader() {
        return (Boolean) this.dgtATRow.getValue("LC_isHeader");
    }

    /**
     * Generated method definition
     *
     * @param value The new value to be assigned
     */
    public void setIsHeader(Boolean value) {
        Boolean oldValue = this.getIsHeader();
        this.dgtATRow.setValue("LC_isHeader", value);
        pcs.firePropertyChange("isHeader", oldValue, value);
    }

    /**
     * Generated method definition
     *
     * @return the requested value
     */
    public String getMaterialDescription() {
        return StringUtilsEx.decodeStringForUI((String) this.dgtATRow.getValue("LC_materialDescription"));
    }

    /**
     * Generated method definition
     *
     * @param value The new value to be assigned
     */
    public void setMaterialDescription(String value) {
        String oldValue = this.getMaterialDescription();
        this.dgtATRow.setValue("LC_materialDescription", StringUtilsEx.encodeStringForDB(value));
        pcs.firePropertyChange("materialDescription", oldValue, value);
    }
    
    /**
     * Generated method definition
     *
     * @return the requested value
     */
    public byte[] getCommentToExecution() {
        return (byte[]) this.dgtATRow.getValue("LC_commentToExecution");
    }

    /**
     * Generated method definition
     *
     * @param value The new value to be assigned
     */
    public void setCommentToExecution(byte[] value) {
        byte[] oldValue = this.getCommentToExecution();
        this.dgtATRow.setValue("LC_commentToExecution", value);
        pcs.firePropertyChange("commentToExecution", oldValue, value);
    }

    /**
     * Generated method definition
     *
     * @return the requested value
     */
    public String getBatchID() {
        return StringUtilsEx.decodeStringForUI((String) this.dgtATRow.getValue("LC_batchID"));
    }

    /**
     * Generated method definition
     *
     * @param value The new value to be assigned
     */
    public void setBatchID(String value) {
        String oldValue = this.getBatchID();
        this.dgtATRow.setValue("LC_batchID", StringUtilsEx.encodeStringForDB(value));
        pcs.firePropertyChange("batchID", oldValue, value);
    }
    
    /**
     * Generated method definition
     *
     * @return the requested value
     */
    public String getSublotID() {
        return StringUtilsEx.decodeStringForUI((String) this.dgtATRow.getValue("LC_sublotID"));
    }

    /**
     * Generated method definition
     *
     * @param value The new value to be assigned
     */
    public void setSublotID(String value) {
        String oldValue = this.getSublotID();
        this.dgtATRow.setValue("LC_sublotID", StringUtilsEx.encodeStringForDB(value));
        pcs.firePropertyChange("sublotID", oldValue, value);
    }
    
    /**
     * Generated method definition
     *
     * @return the requested value
     */
    public MeasuredValue getPlannedQty() {
        return (MeasuredValue) this.dgtATRow.getValue("LC_plannedQty");
    }

    /**
     * Generated method definition
     *
     * @param value The new value to be assigned
     */
    public void setPlannedQty(MeasuredValue value) {
        MeasuredValue oldValue = this.getPlannedQty();
        this.dgtATRow.setValue("LC_plannedQty", value);
        pcs.firePropertyChange("plannedQty", oldValue, value);
    }

    /**
     * Generated method definition
     *
     * @return the requested value
     */
    public MeasuredValue getProducedQty() {
        return (MeasuredValue) this.dgtATRow.getValue("LC_producedQty");
    }

    /**
     * Generated method definition
     *
     * @param value The new value to be assigned
     */
    public void setProducedQty(MeasuredValue value) {
        MeasuredValue oldValue = this.getProducedQty();
        this.dgtATRow.setValue("LC_producedQty", value);
        pcs.firePropertyChange("producedQty", oldValue, value);
    }

    /**
     * Generated method definition
     *
     * @return the requested value
     */
    public MeasuredValue getSublotQty() {
        return (MeasuredValue) this.dgtATRow.getValue("LC_sublotQty");
    }

    /**
     * Generated method definition
     *
     * @param value The new value to be assigned
     */
    public void setSublotQty(MeasuredValue value) {
        MeasuredValue oldValue = this.getSublotQty();
        this.dgtATRow.setValue("LC_sublotQty", value);
        pcs.firePropertyChange("sublotQty", oldValue, value);
    }

    /**
     * Generated method definition
     *
     * @return the requested value
     */
    public String getDefinedPackingLevels() {
        return StringUtilsEx.decodeStringForUI((String) this.dgtATRow.getValue("LC_definedPackingLevels"));
    }

    /**
     * Generated method definition
     *
     * @param value The new value to be assigned
     */
    public void setDefinedPackingLevels(String value) {
        String oldValue = this.getDefinedPackingLevels();
        this.dgtATRow.setValue("LC_definedPackingLevels", StringUtilsEx.encodeStringForDB(value));
        pcs.firePropertyChange("definedPackingLevels", oldValue, value);
    }
    
    /**
     * Generated method definition
     *
     * @return the requested value
     */
    public String getPackingLevelNames() {
        return StringUtilsEx.decodeStringForUI((String) this.dgtATRow.getValue("LC_packingLevelNames"));
    }

    /**
     * Generated method definition
     *
     * @param value The new value to be assigned
     */
    public void setPackingLevelNames(String value) {
        String oldValue = this.getPackingLevelNames();
        this.dgtATRow.setValue("LC_packingLevelNames", StringUtilsEx.encodeStringForDB(value));
        pcs.firePropertyChange("packingLevelNames", oldValue, value);
    }
    
    /**
     * Generated method definition
     *
     * @return the requested value
     */
    public MeasuredValue getSublotLevelQty() {
        return (MeasuredValue) this.dgtATRow.getValue("LC_sublotLevelQty");
    }

    /**
     * Generated method definition
     *
     * @param value The new value to be assigned
     */
    public void setSublotLevelQty(MeasuredValue value) {
        MeasuredValue oldValue = this.getSublotLevelQty();
        this.dgtATRow.setValue("LC_sublotLevelQty", value);
        pcs.firePropertyChange("sublotLevelQty", oldValue, value);
    }

    /**
     * Generated method definition
     *
     * @return the requested value
     */
    public MeasuredValue getLogisticUnitLevelQty() {
        return (MeasuredValue) this.dgtATRow.getValue("LC_logisticUnitLevelQty");
    }

    /**
     * Generated method definition
     *
     * @param value The new value to be assigned
     */
    public void setLogisticUnitLevelQty(MeasuredValue value) {
        MeasuredValue oldValue = this.getLogisticUnitLevelQty();
        this.dgtATRow.setValue("LC_logisticUnitLevelQty", value);
        pcs.firePropertyChange("logisticUnitLevelQty", oldValue, value);
    }

    /**
     * Generated method definition
     *
     * @return the requested value
     */
    public String getResult() {
        return StringUtilsEx.decodeStringForUI((String) this.dgtATRow.getValue("LC_Result"));
    }

    /**
     * Generated method definition
     *
     * @param value The new value to be assigned
     */
    public void setResult(String value) {
        String oldValue = this.getResult();
        this.dgtATRow.setValue("LC_Result", StringUtilsEx.encodeStringForDB(value));
        pcs.firePropertyChange("result", oldValue, value);
    }
    
    /**
     * Generated method definition
     *
     * @return the requested value
     */
    public Boolean getIsSummaryData() {
        return (Boolean) this.dgtATRow.getValue("LC_isSummaryData");
    }

    /**
     * Generated method definition
     *
     * @param value The new value to be assigned
     */
    public void setIsSummaryData(Boolean value) {
        Boolean oldValue = this.getIsSummaryData();
        this.dgtATRow.setValue("LC_isSummaryData", value);
        pcs.firePropertyChange("isSummaryData", oldValue, value);
    }

    @Override
    protected Response prepareATRowForSave() {
        // Check if transient references are valid and store the corresponding keys in the ATRow:
        Response res = super.prepareATRowForSave();

        return res;
    }

}
