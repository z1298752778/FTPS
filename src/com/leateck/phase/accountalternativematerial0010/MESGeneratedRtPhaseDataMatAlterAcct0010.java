package com.leateck.phase.accountalternativematerial0010;

/**
 * This file is generated by the PhaseGenerator
 *
 * Please do not modify this file manually !!
 */

import com.datasweep.compatibility.client.ATRow;
import com.datasweep.compatibility.client.Response;
import com.rockwell.mes.services.s88.ifc.processdata.MESRtPhaseData;

import com.rockwell.mes.commons.base.ifc.utility.StringUtilsEx;
import com.datasweep.compatibility.client.MeasuredValue;

 /**
 * Generated class definition
 * <br/>Application table: LC_PhDatMatAlterAcct0010
 */
public abstract class MESGeneratedRtPhaseDataMatAlterAcct0010
 extends MESRtPhaseData {

    /** Generated attribute definition */
    protected static final String ATDEFINITION_NAME = "LC_PhDatMatAlterAcct0010";


    @Override
    public String getATDefinitionName() {
        return ATDEFINITION_NAME;
    }

    /**
     * Generated constructor
     *
     * @param key The key of the ATRow to load.
     */
    public MESGeneratedRtPhaseDataMatAlterAcct0010(long key) {
        super(key);
    }

    /**
     * Generated copy constructor
     *
     * @param source the source to copy.
     */
    public MESGeneratedRtPhaseDataMatAlterAcct0010(MESGeneratedRtPhaseDataMatAlterAcct0010 source) {
        super(source);
    }

    /**
     * Generated constructor
     *
     * @param baseATRow The ATRow to wrap.
     */
    public MESGeneratedRtPhaseDataMatAlterAcct0010(ATRow baseATRow) {
        super(baseATRow);
    }

    /**
     * Generated constructor
     */
    public MESGeneratedRtPhaseDataMatAlterAcct0010() {
        super();
    }

    @Override
    protected void synchronizeAfterATRowRefresh() {
        super.synchronizeAfterATRowRefresh();
    }    
    
    /**
     * Generated method definition
     *
     * @return the requested value
     */
    public String getMaterialID() {
        return StringUtilsEx.decodeStringForUI((String) this.dgtATRow.getValue("LC_materialID"));
    }

    /**
     * Generated method definition
     *
     * @param value The new value to be assigned
     */
    public void setMaterialID(String value) {
        String oldValue = this.getMaterialID();
        this.dgtATRow.setValue("LC_materialID", StringUtilsEx.encodeStringForDB(value));
        pcs.firePropertyChange("materialID", oldValue, value);
    }
    
    /**
     * Generated method definition
     *
     * @return the requested value
     */
    public String getMfcPos() {
        return StringUtilsEx.decodeStringForUI((String) this.dgtATRow.getValue("LC_mfcPos"));
    }

    /**
     * Generated method definition
     *
     * @param value The new value to be assigned
     */
    public void setMfcPos(String value) {
        String oldValue = this.getMfcPos();
        this.dgtATRow.setValue("LC_mfcPos", StringUtilsEx.encodeStringForDB(value));
        pcs.firePropertyChange("mfcPos", oldValue, value);
    }
    
    /**
     * Generated method definition
     *
     * @return the requested value
     */
    public Boolean getIsHeader() {
        return (Boolean) this.dgtATRow.getValue("LC_isHeader");
    }

    /**
     * Generated method definition
     *
     * @param value The new value to be assigned
     */
    public void setIsHeader(Boolean value) {
        Boolean oldValue = this.getIsHeader();
        this.dgtATRow.setValue("LC_isHeader", value);
        pcs.firePropertyChange("isHeader", oldValue, value);
    }

    /**
     * Generated method definition
     *
     * @return the requested value
     */
    public String getMaterialDescription() {
        return StringUtilsEx.decodeStringForUI((String) this.dgtATRow.getValue("LC_materialDescription"));
    }

    /**
     * Generated method definition
     *
     * @param value The new value to be assigned
     */
    public void setMaterialDescription(String value) {
        String oldValue = this.getMaterialDescription();
        this.dgtATRow.setValue("LC_materialDescription", StringUtilsEx.encodeStringForDB(value));
        pcs.firePropertyChange("materialDescription", oldValue, value);
    }
    
    /**
     * Generated method definition
     *
     * @return the requested value
     */
    public String getBatchID() {
        return StringUtilsEx.decodeStringForUI((String) this.dgtATRow.getValue("LC_batchID"));
    }

    /**
     * Generated method definition
     *
     * @param value The new value to be assigned
     */
    public void setBatchID(String value) {
        String oldValue = this.getBatchID();
        this.dgtATRow.setValue("LC_batchID", StringUtilsEx.encodeStringForDB(value));
        pcs.firePropertyChange("batchID", oldValue, value);
    }
    
    /**
     * Generated method definition
     *
     * @return the requested value
     */
    public String getSublotID() {
        return StringUtilsEx.decodeStringForUI((String) this.dgtATRow.getValue("LC_sublotID"));
    }

    /**
     * Generated method definition
     *
     * @param value The new value to be assigned
     */
    public void setSublotID(String value) {
        String oldValue = this.getSublotID();
        this.dgtATRow.setValue("LC_sublotID", StringUtilsEx.encodeStringForDB(value));
        pcs.firePropertyChange("sublotID", oldValue, value);
    }
    
    /**
     * Generated method definition
     *
     * @return the requested value
     */
    public MeasuredValue getIdentifiedQty() {
        return (MeasuredValue) this.dgtATRow.getValue("LC_identifiedQty");
    }

    /**
     * Generated method definition
     *
     * @param value The new value to be assigned
     */
    public void setIdentifiedQty(MeasuredValue value) {
        MeasuredValue oldValue = this.getIdentifiedQty();
        this.dgtATRow.setValue("LC_identifiedQty", value);
        pcs.firePropertyChange("identifiedQty", oldValue, value);
    }

    /**
     * Generated method definition
     *
     * @return the requested value
     */
    public MeasuredValue getConsumedQty() {
        return (MeasuredValue) this.dgtATRow.getValue("LC_consumedQty");
    }

    /**
     * Generated method definition
     *
     * @param value The new value to be assigned
     */
    public void setConsumedQty(MeasuredValue value) {
        MeasuredValue oldValue = this.getConsumedQty();
        this.dgtATRow.setValue("LC_consumedQty", value);
        pcs.firePropertyChange("consumedQty", oldValue, value);
    }

    /**
     * Generated method definition
     *
     * @return the requested value
     */
    public MeasuredValue getWastedQty() {
        return (MeasuredValue) this.dgtATRow.getValue("LC_wastedQty");
    }

    /**
     * Generated method definition
     *
     * @param value The new value to be assigned
     */
    public void setWastedQty(MeasuredValue value) {
        MeasuredValue oldValue = this.getWastedQty();
        this.dgtATRow.setValue("LC_wastedQty", value);
        pcs.firePropertyChange("wastedQty", oldValue, value);
    }

    /**
     * Generated method definition
     *
     * @return the requested value
     */
    public MeasuredValue getSampledQty() {
        return (MeasuredValue) this.dgtATRow.getValue("LC_sampledQty");
    }

    /**
     * Generated method definition
     *
     * @param value The new value to be assigned
     */
    public void setSampledQty(MeasuredValue value) {
        MeasuredValue oldValue = this.getSampledQty();
        this.dgtATRow.setValue("LC_sampledQty", value);
        pcs.firePropertyChange("sampledQty", oldValue, value);
    }

    /**
     * Generated method definition
     *
     * @return the requested value
     */
    public MeasuredValue getReturnedQty() {
        return (MeasuredValue) this.dgtATRow.getValue("LC_returnedQty");
    }

    /**
     * Generated method definition
     *
     * @param value The new value to be assigned
     */
    public void setReturnedQty(MeasuredValue value) {
        MeasuredValue oldValue = this.getReturnedQty();
        this.dgtATRow.setValue("LC_returnedQty", value);
        pcs.firePropertyChange("returnedQty", oldValue, value);
    }

    /**
     * Generated method definition
     *
     * @return the requested value
     */
    public String getPlannedQtyWithLimits() {
        return StringUtilsEx.decodeStringForUI((String) this.dgtATRow.getValue("LC_plannedQtyWithLimits"));
    }

    /**
     * Generated method definition
     *
     * @param value The new value to be assigned
     */
    public void setPlannedQtyWithLimits(String value) {
        String oldValue = this.getPlannedQtyWithLimits();
        this.dgtATRow.setValue("LC_plannedQtyWithLimits", StringUtilsEx.encodeStringForDB(value));
        pcs.firePropertyChange("plannedQtyWithLimits", oldValue, value);
    }
    
    /**
     * Generated method definition
     *
     * @return the requested value
     */
    public String getAccountingStatus() {
        return StringUtilsEx.decodeStringForUI((String) this.dgtATRow.getValue("LC_accountingStatus"));
    }

    /**
     * Generated method definition
     *
     * @param value The new value to be assigned
     */
    public void setAccountingStatus(String value) {
        String oldValue = this.getAccountingStatus();
        this.dgtATRow.setValue("LC_accountingStatus", StringUtilsEx.encodeStringForDB(value));
        pcs.firePropertyChange("accountingStatus", oldValue, value);
    }
    
    /**
     * Generated method definition
     *
     * @return the requested value
     */
    public String getResult() {
        return StringUtilsEx.decodeStringForUI((String) this.dgtATRow.getValue("LC_result"));
    }

    /**
     * Generated method definition
     *
     * @param value The new value to be assigned
     */
    public void setResult(String value) {
        String oldValue = this.getResult();
        this.dgtATRow.setValue("LC_result", StringUtilsEx.encodeStringForDB(value));
        pcs.firePropertyChange("result", oldValue, value);
    }
    
    /**
     * Generated method definition
     *
     * @return the requested value
     */
    public Boolean getIsModified() {
        return (Boolean) this.dgtATRow.getValue("LC_isModified");
    }

    /**
     * Generated method definition
     *
     * @param value The new value to be assigned
     */
    public void setIsModified(Boolean value) {
        Boolean oldValue = this.getIsModified();
        this.dgtATRow.setValue("LC_isModified", value);
        pcs.firePropertyChange("isModified", oldValue, value);
    }

    @Override
    protected Response prepareATRowForSave() {
        // Check if transient references are valid and store the corresponding keys in the ATRow:
        Response res = super.prepareATRowForSave();

        return res;
    }

}
