package com.leateck.phase.sclRecordEBR0020.AT;


/**
 * This file was generated by ATDefAccessClassGenerator and FMPP 2.3.15
 *
 * Please do not modify this file manually !!
 */
import com.datasweep.compatibility.client.DatasweepException;
import com.datasweep.compatibility.client.Server;
import com.rockwell.mes.commons.base.ifc.objects.MESATObject;
import com.rockwell.mes.commons.base.ifc.objects.MESATObjectFilter;
import com.rockwell.mes.commons.base.ifc.services.PCContext;
import java.util.List;

/**
 * Generated filter class for application table SCL_IF_RecordEBRData.
 */
public abstract class MESGeneratedSCLIFRecordEBRDataFilter extends MESATObjectFilter implements IMESGeneratedSCLIFRecordEBRDataFilter {

    /** Generated attribute definition */
    private static final long serialVersionUID = 1L;

    /** Generated attribute definition */
    protected static final String ATDEFINITION_NAME = "SCL_IF_RecordEBRData";

    /**
     * Generated constructor
     * 
     * @param server The Server object
     */
    public MESGeneratedSCLIFRecordEBRDataFilter(Server server) {
        super(server, ATDEFINITION_NAME);
    }

    /**
     * Generated default constructor
     */
    public MESGeneratedSCLIFRecordEBRDataFilter() {
        this(PCContext.getServerImpl());
    }

    @Override
    public List<IMESSCLIFRecordEBRData> getFilteredObjects() {
        return MESATObject.getFilteredMESATObjectList(this, IMESSCLIFRecordEBRData.class);
    }

      @Override
      public IMESSCLIFRecordEBRDataFilter forErpProcessFlagEqualTo(Long value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameEqualTo(IMESSCLIFRecordEBRData.COL_NAME_ERPPROCESSFLAG, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forErpProcessFlagGreaterThanOrEqualTo(Long value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameGreaterThanOrEqualTo(IMESSCLIFRecordEBRData.COL_NAME_ERPPROCESSFLAG, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forErpProcessFlagLessThan(Long value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameLessThan(IMESSCLIFRecordEBRData.COL_NAME_ERPPROCESSFLAG, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forErpProcessFlagNotEqualTo(Long value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameNotEqualTo(IMESSCLIFRecordEBRData.COL_NAME_ERPPROCESSFLAG, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forExecuteOprContaining(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameContaining(IMESSCLIFRecordEBRData.COL_NAME_EXECUTEOPR, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forExecuteOprEqualTo(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameEqualTo(IMESSCLIFRecordEBRData.COL_NAME_EXECUTEOPR, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forExecuteOprNotEqualTo(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameNotEqualTo(IMESSCLIFRecordEBRData.COL_NAME_EXECUTEOPR, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forExecuteOprStartingWith(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameStartingWith(IMESSCLIFRecordEBRData.COL_NAME_EXECUTEOPR, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forLimsProcessFlagEqualTo(Long value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameEqualTo(IMESSCLIFRecordEBRData.COL_NAME_LIMSPROCESSFLAG, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forLimsProcessFlagGreaterThanOrEqualTo(Long value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameGreaterThanOrEqualTo(IMESSCLIFRecordEBRData.COL_NAME_LIMSPROCESSFLAG, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forLimsProcessFlagLessThan(Long value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameLessThan(IMESSCLIFRecordEBRData.COL_NAME_LIMSPROCESSFLAG, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forLimsProcessFlagNotEqualTo(Long value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameNotEqualTo(IMESSCLIFRecordEBRData.COL_NAME_LIMSPROCESSFLAG, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forMesProcessFlagEqualTo(Long value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameEqualTo(IMESSCLIFRecordEBRData.COL_NAME_MESPROCESSFLAG, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forMesProcessFlagGreaterThanOrEqualTo(Long value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameGreaterThanOrEqualTo(IMESSCLIFRecordEBRData.COL_NAME_MESPROCESSFLAG, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forMesProcessFlagLessThan(Long value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameLessThan(IMESSCLIFRecordEBRData.COL_NAME_MESPROCESSFLAG, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forMesProcessFlagNotEqualTo(Long value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameNotEqualTo(IMESSCLIFRecordEBRData.COL_NAME_MESPROCESSFLAG, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forMvKey1Containing(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameContaining(IMESSCLIFRecordEBRData.COL_NAME_MVKEY1, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forMvKey1EqualTo(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameEqualTo(IMESSCLIFRecordEBRData.COL_NAME_MVKEY1, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forMvKey1NotEqualTo(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameNotEqualTo(IMESSCLIFRecordEBRData.COL_NAME_MVKEY1, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forMvKey1StartingWith(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameStartingWith(IMESSCLIFRecordEBRData.COL_NAME_MVKEY1, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forMvKey10Containing(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameContaining(IMESSCLIFRecordEBRData.COL_NAME_MVKEY10, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forMvKey10EqualTo(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameEqualTo(IMESSCLIFRecordEBRData.COL_NAME_MVKEY10, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forMvKey10NotEqualTo(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameNotEqualTo(IMESSCLIFRecordEBRData.COL_NAME_MVKEY10, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forMvKey10StartingWith(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameStartingWith(IMESSCLIFRecordEBRData.COL_NAME_MVKEY10, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forMvKey11Containing(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameContaining(IMESSCLIFRecordEBRData.COL_NAME_MVKEY11, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forMvKey11EqualTo(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameEqualTo(IMESSCLIFRecordEBRData.COL_NAME_MVKEY11, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forMvKey11NotEqualTo(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameNotEqualTo(IMESSCLIFRecordEBRData.COL_NAME_MVKEY11, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forMvKey11StartingWith(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameStartingWith(IMESSCLIFRecordEBRData.COL_NAME_MVKEY11, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forMvKey12Containing(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameContaining(IMESSCLIFRecordEBRData.COL_NAME_MVKEY12, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forMvKey12EqualTo(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameEqualTo(IMESSCLIFRecordEBRData.COL_NAME_MVKEY12, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forMvKey12NotEqualTo(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameNotEqualTo(IMESSCLIFRecordEBRData.COL_NAME_MVKEY12, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forMvKey12StartingWith(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameStartingWith(IMESSCLIFRecordEBRData.COL_NAME_MVKEY12, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forMvKey13Containing(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameContaining(IMESSCLIFRecordEBRData.COL_NAME_MVKEY13, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forMvKey13EqualTo(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameEqualTo(IMESSCLIFRecordEBRData.COL_NAME_MVKEY13, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forMvKey13NotEqualTo(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameNotEqualTo(IMESSCLIFRecordEBRData.COL_NAME_MVKEY13, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forMvKey13StartingWith(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameStartingWith(IMESSCLIFRecordEBRData.COL_NAME_MVKEY13, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forMvKey14Containing(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameContaining(IMESSCLIFRecordEBRData.COL_NAME_MVKEY14, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forMvKey14EqualTo(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameEqualTo(IMESSCLIFRecordEBRData.COL_NAME_MVKEY14, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forMvKey14NotEqualTo(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameNotEqualTo(IMESSCLIFRecordEBRData.COL_NAME_MVKEY14, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forMvKey14StartingWith(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameStartingWith(IMESSCLIFRecordEBRData.COL_NAME_MVKEY14, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forMvKey15Containing(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameContaining(IMESSCLIFRecordEBRData.COL_NAME_MVKEY15, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forMvKey15EqualTo(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameEqualTo(IMESSCLIFRecordEBRData.COL_NAME_MVKEY15, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forMvKey15NotEqualTo(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameNotEqualTo(IMESSCLIFRecordEBRData.COL_NAME_MVKEY15, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forMvKey15StartingWith(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameStartingWith(IMESSCLIFRecordEBRData.COL_NAME_MVKEY15, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forMvKey16Containing(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameContaining(IMESSCLIFRecordEBRData.COL_NAME_MVKEY16, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forMvKey16EqualTo(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameEqualTo(IMESSCLIFRecordEBRData.COL_NAME_MVKEY16, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forMvKey16NotEqualTo(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameNotEqualTo(IMESSCLIFRecordEBRData.COL_NAME_MVKEY16, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forMvKey16StartingWith(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameStartingWith(IMESSCLIFRecordEBRData.COL_NAME_MVKEY16, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forMvKey17Containing(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameContaining(IMESSCLIFRecordEBRData.COL_NAME_MVKEY17, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forMvKey17EqualTo(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameEqualTo(IMESSCLIFRecordEBRData.COL_NAME_MVKEY17, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forMvKey17NotEqualTo(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameNotEqualTo(IMESSCLIFRecordEBRData.COL_NAME_MVKEY17, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forMvKey17StartingWith(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameStartingWith(IMESSCLIFRecordEBRData.COL_NAME_MVKEY17, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forMvKey18Containing(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameContaining(IMESSCLIFRecordEBRData.COL_NAME_MVKEY18, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forMvKey18EqualTo(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameEqualTo(IMESSCLIFRecordEBRData.COL_NAME_MVKEY18, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forMvKey18NotEqualTo(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameNotEqualTo(IMESSCLIFRecordEBRData.COL_NAME_MVKEY18, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forMvKey18StartingWith(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameStartingWith(IMESSCLIFRecordEBRData.COL_NAME_MVKEY18, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forMvKey19Containing(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameContaining(IMESSCLIFRecordEBRData.COL_NAME_MVKEY19, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forMvKey19EqualTo(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameEqualTo(IMESSCLIFRecordEBRData.COL_NAME_MVKEY19, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forMvKey19NotEqualTo(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameNotEqualTo(IMESSCLIFRecordEBRData.COL_NAME_MVKEY19, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forMvKey19StartingWith(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameStartingWith(IMESSCLIFRecordEBRData.COL_NAME_MVKEY19, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forMvKey2Containing(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameContaining(IMESSCLIFRecordEBRData.COL_NAME_MVKEY2, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forMvKey2EqualTo(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameEqualTo(IMESSCLIFRecordEBRData.COL_NAME_MVKEY2, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forMvKey2NotEqualTo(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameNotEqualTo(IMESSCLIFRecordEBRData.COL_NAME_MVKEY2, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forMvKey2StartingWith(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameStartingWith(IMESSCLIFRecordEBRData.COL_NAME_MVKEY2, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forMvKey20Containing(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameContaining(IMESSCLIFRecordEBRData.COL_NAME_MVKEY20, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forMvKey20EqualTo(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameEqualTo(IMESSCLIFRecordEBRData.COL_NAME_MVKEY20, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forMvKey20NotEqualTo(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameNotEqualTo(IMESSCLIFRecordEBRData.COL_NAME_MVKEY20, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forMvKey20StartingWith(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameStartingWith(IMESSCLIFRecordEBRData.COL_NAME_MVKEY20, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forMvKey3Containing(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameContaining(IMESSCLIFRecordEBRData.COL_NAME_MVKEY3, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forMvKey3EqualTo(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameEqualTo(IMESSCLIFRecordEBRData.COL_NAME_MVKEY3, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forMvKey3NotEqualTo(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameNotEqualTo(IMESSCLIFRecordEBRData.COL_NAME_MVKEY3, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forMvKey3StartingWith(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameStartingWith(IMESSCLIFRecordEBRData.COL_NAME_MVKEY3, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forMvKey4Containing(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameContaining(IMESSCLIFRecordEBRData.COL_NAME_MVKEY4, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forMvKey4EqualTo(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameEqualTo(IMESSCLIFRecordEBRData.COL_NAME_MVKEY4, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forMvKey4NotEqualTo(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameNotEqualTo(IMESSCLIFRecordEBRData.COL_NAME_MVKEY4, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forMvKey4StartingWith(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameStartingWith(IMESSCLIFRecordEBRData.COL_NAME_MVKEY4, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forMvKey5Containing(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameContaining(IMESSCLIFRecordEBRData.COL_NAME_MVKEY5, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forMvKey5EqualTo(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameEqualTo(IMESSCLIFRecordEBRData.COL_NAME_MVKEY5, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forMvKey5NotEqualTo(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameNotEqualTo(IMESSCLIFRecordEBRData.COL_NAME_MVKEY5, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forMvKey5StartingWith(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameStartingWith(IMESSCLIFRecordEBRData.COL_NAME_MVKEY5, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forMvKey6Containing(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameContaining(IMESSCLIFRecordEBRData.COL_NAME_MVKEY6, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forMvKey6EqualTo(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameEqualTo(IMESSCLIFRecordEBRData.COL_NAME_MVKEY6, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forMvKey6NotEqualTo(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameNotEqualTo(IMESSCLIFRecordEBRData.COL_NAME_MVKEY6, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forMvKey6StartingWith(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameStartingWith(IMESSCLIFRecordEBRData.COL_NAME_MVKEY6, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forMvKey7Containing(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameContaining(IMESSCLIFRecordEBRData.COL_NAME_MVKEY7, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forMvKey7EqualTo(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameEqualTo(IMESSCLIFRecordEBRData.COL_NAME_MVKEY7, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forMvKey7NotEqualTo(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameNotEqualTo(IMESSCLIFRecordEBRData.COL_NAME_MVKEY7, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forMvKey7StartingWith(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameStartingWith(IMESSCLIFRecordEBRData.COL_NAME_MVKEY7, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forMvKey8Containing(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameContaining(IMESSCLIFRecordEBRData.COL_NAME_MVKEY8, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forMvKey8EqualTo(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameEqualTo(IMESSCLIFRecordEBRData.COL_NAME_MVKEY8, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forMvKey8NotEqualTo(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameNotEqualTo(IMESSCLIFRecordEBRData.COL_NAME_MVKEY8, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forMvKey8StartingWith(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameStartingWith(IMESSCLIFRecordEBRData.COL_NAME_MVKEY8, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forMvKey9Containing(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameContaining(IMESSCLIFRecordEBRData.COL_NAME_MVKEY9, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forMvKey9EqualTo(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameEqualTo(IMESSCLIFRecordEBRData.COL_NAME_MVKEY9, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forMvKey9NotEqualTo(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameNotEqualTo(IMESSCLIFRecordEBRData.COL_NAME_MVKEY9, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forMvKey9StartingWith(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameStartingWith(IMESSCLIFRecordEBRData.COL_NAME_MVKEY9, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forMvUom1Containing(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameContaining(IMESSCLIFRecordEBRData.COL_NAME_MVUOM1, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forMvUom1EqualTo(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameEqualTo(IMESSCLIFRecordEBRData.COL_NAME_MVUOM1, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forMvUom1NotEqualTo(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameNotEqualTo(IMESSCLIFRecordEBRData.COL_NAME_MVUOM1, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forMvUom1StartingWith(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameStartingWith(IMESSCLIFRecordEBRData.COL_NAME_MVUOM1, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forMvUom10Containing(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameContaining(IMESSCLIFRecordEBRData.COL_NAME_MVUOM10, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forMvUom10EqualTo(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameEqualTo(IMESSCLIFRecordEBRData.COL_NAME_MVUOM10, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forMvUom10NotEqualTo(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameNotEqualTo(IMESSCLIFRecordEBRData.COL_NAME_MVUOM10, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forMvUom10StartingWith(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameStartingWith(IMESSCLIFRecordEBRData.COL_NAME_MVUOM10, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forMvUom11Containing(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameContaining(IMESSCLIFRecordEBRData.COL_NAME_MVUOM11, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forMvUom11EqualTo(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameEqualTo(IMESSCLIFRecordEBRData.COL_NAME_MVUOM11, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forMvUom11NotEqualTo(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameNotEqualTo(IMESSCLIFRecordEBRData.COL_NAME_MVUOM11, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forMvUom11StartingWith(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameStartingWith(IMESSCLIFRecordEBRData.COL_NAME_MVUOM11, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forMvUom12Containing(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameContaining(IMESSCLIFRecordEBRData.COL_NAME_MVUOM12, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forMvUom12EqualTo(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameEqualTo(IMESSCLIFRecordEBRData.COL_NAME_MVUOM12, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forMvUom12NotEqualTo(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameNotEqualTo(IMESSCLIFRecordEBRData.COL_NAME_MVUOM12, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forMvUom12StartingWith(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameStartingWith(IMESSCLIFRecordEBRData.COL_NAME_MVUOM12, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forMvUom13Containing(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameContaining(IMESSCLIFRecordEBRData.COL_NAME_MVUOM13, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forMvUom13EqualTo(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameEqualTo(IMESSCLIFRecordEBRData.COL_NAME_MVUOM13, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forMvUom13NotEqualTo(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameNotEqualTo(IMESSCLIFRecordEBRData.COL_NAME_MVUOM13, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forMvUom13StartingWith(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameStartingWith(IMESSCLIFRecordEBRData.COL_NAME_MVUOM13, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forMvUom14Containing(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameContaining(IMESSCLIFRecordEBRData.COL_NAME_MVUOM14, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forMvUom14EqualTo(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameEqualTo(IMESSCLIFRecordEBRData.COL_NAME_MVUOM14, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forMvUom14NotEqualTo(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameNotEqualTo(IMESSCLIFRecordEBRData.COL_NAME_MVUOM14, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forMvUom14StartingWith(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameStartingWith(IMESSCLIFRecordEBRData.COL_NAME_MVUOM14, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forMvUom15Containing(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameContaining(IMESSCLIFRecordEBRData.COL_NAME_MVUOM15, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forMvUom15EqualTo(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameEqualTo(IMESSCLIFRecordEBRData.COL_NAME_MVUOM15, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forMvUom15NotEqualTo(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameNotEqualTo(IMESSCLIFRecordEBRData.COL_NAME_MVUOM15, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forMvUom15StartingWith(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameStartingWith(IMESSCLIFRecordEBRData.COL_NAME_MVUOM15, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forMvUom16Containing(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameContaining(IMESSCLIFRecordEBRData.COL_NAME_MVUOM16, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forMvUom16EqualTo(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameEqualTo(IMESSCLIFRecordEBRData.COL_NAME_MVUOM16, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forMvUom16NotEqualTo(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameNotEqualTo(IMESSCLIFRecordEBRData.COL_NAME_MVUOM16, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forMvUom16StartingWith(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameStartingWith(IMESSCLIFRecordEBRData.COL_NAME_MVUOM16, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forMvUom17Containing(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameContaining(IMESSCLIFRecordEBRData.COL_NAME_MVUOM17, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forMvUom17EqualTo(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameEqualTo(IMESSCLIFRecordEBRData.COL_NAME_MVUOM17, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forMvUom17NotEqualTo(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameNotEqualTo(IMESSCLIFRecordEBRData.COL_NAME_MVUOM17, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forMvUom17StartingWith(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameStartingWith(IMESSCLIFRecordEBRData.COL_NAME_MVUOM17, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forMvUom18Containing(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameContaining(IMESSCLIFRecordEBRData.COL_NAME_MVUOM18, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forMvUom18EqualTo(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameEqualTo(IMESSCLIFRecordEBRData.COL_NAME_MVUOM18, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forMvUom18NotEqualTo(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameNotEqualTo(IMESSCLIFRecordEBRData.COL_NAME_MVUOM18, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forMvUom18StartingWith(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameStartingWith(IMESSCLIFRecordEBRData.COL_NAME_MVUOM18, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forMvUom19Containing(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameContaining(IMESSCLIFRecordEBRData.COL_NAME_MVUOM19, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forMvUom19EqualTo(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameEqualTo(IMESSCLIFRecordEBRData.COL_NAME_MVUOM19, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forMvUom19NotEqualTo(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameNotEqualTo(IMESSCLIFRecordEBRData.COL_NAME_MVUOM19, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forMvUom19StartingWith(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameStartingWith(IMESSCLIFRecordEBRData.COL_NAME_MVUOM19, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forMvUom2Containing(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameContaining(IMESSCLIFRecordEBRData.COL_NAME_MVUOM2, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forMvUom2EqualTo(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameEqualTo(IMESSCLIFRecordEBRData.COL_NAME_MVUOM2, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forMvUom2NotEqualTo(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameNotEqualTo(IMESSCLIFRecordEBRData.COL_NAME_MVUOM2, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forMvUom2StartingWith(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameStartingWith(IMESSCLIFRecordEBRData.COL_NAME_MVUOM2, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forMvUom20Containing(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameContaining(IMESSCLIFRecordEBRData.COL_NAME_MVUOM20, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forMvUom20EqualTo(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameEqualTo(IMESSCLIFRecordEBRData.COL_NAME_MVUOM20, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forMvUom20NotEqualTo(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameNotEqualTo(IMESSCLIFRecordEBRData.COL_NAME_MVUOM20, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forMvUom20StartingWith(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameStartingWith(IMESSCLIFRecordEBRData.COL_NAME_MVUOM20, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forMvUom3Containing(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameContaining(IMESSCLIFRecordEBRData.COL_NAME_MVUOM3, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forMvUom3EqualTo(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameEqualTo(IMESSCLIFRecordEBRData.COL_NAME_MVUOM3, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forMvUom3NotEqualTo(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameNotEqualTo(IMESSCLIFRecordEBRData.COL_NAME_MVUOM3, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forMvUom3StartingWith(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameStartingWith(IMESSCLIFRecordEBRData.COL_NAME_MVUOM3, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forMvUom4Containing(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameContaining(IMESSCLIFRecordEBRData.COL_NAME_MVUOM4, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forMvUom4EqualTo(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameEqualTo(IMESSCLIFRecordEBRData.COL_NAME_MVUOM4, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forMvUom4NotEqualTo(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameNotEqualTo(IMESSCLIFRecordEBRData.COL_NAME_MVUOM4, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forMvUom4StartingWith(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameStartingWith(IMESSCLIFRecordEBRData.COL_NAME_MVUOM4, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forMvUom5Containing(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameContaining(IMESSCLIFRecordEBRData.COL_NAME_MVUOM5, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forMvUom5EqualTo(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameEqualTo(IMESSCLIFRecordEBRData.COL_NAME_MVUOM5, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forMvUom5NotEqualTo(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameNotEqualTo(IMESSCLIFRecordEBRData.COL_NAME_MVUOM5, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forMvUom5StartingWith(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameStartingWith(IMESSCLIFRecordEBRData.COL_NAME_MVUOM5, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forMvUom6Containing(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameContaining(IMESSCLIFRecordEBRData.COL_NAME_MVUOM6, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forMvUom6EqualTo(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameEqualTo(IMESSCLIFRecordEBRData.COL_NAME_MVUOM6, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forMvUom6NotEqualTo(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameNotEqualTo(IMESSCLIFRecordEBRData.COL_NAME_MVUOM6, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forMvUom6StartingWith(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameStartingWith(IMESSCLIFRecordEBRData.COL_NAME_MVUOM6, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forMvUom7Containing(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameContaining(IMESSCLIFRecordEBRData.COL_NAME_MVUOM7, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forMvUom7EqualTo(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameEqualTo(IMESSCLIFRecordEBRData.COL_NAME_MVUOM7, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forMvUom7NotEqualTo(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameNotEqualTo(IMESSCLIFRecordEBRData.COL_NAME_MVUOM7, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forMvUom7StartingWith(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameStartingWith(IMESSCLIFRecordEBRData.COL_NAME_MVUOM7, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forMvUom8Containing(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameContaining(IMESSCLIFRecordEBRData.COL_NAME_MVUOM8, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forMvUom8EqualTo(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameEqualTo(IMESSCLIFRecordEBRData.COL_NAME_MVUOM8, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forMvUom8NotEqualTo(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameNotEqualTo(IMESSCLIFRecordEBRData.COL_NAME_MVUOM8, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forMvUom8StartingWith(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameStartingWith(IMESSCLIFRecordEBRData.COL_NAME_MVUOM8, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forMvUom9Containing(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameContaining(IMESSCLIFRecordEBRData.COL_NAME_MVUOM9, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forMvUom9EqualTo(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameEqualTo(IMESSCLIFRecordEBRData.COL_NAME_MVUOM9, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forMvUom9NotEqualTo(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameNotEqualTo(IMESSCLIFRecordEBRData.COL_NAME_MVUOM9, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forMvUom9StartingWith(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameStartingWith(IMESSCLIFRecordEBRData.COL_NAME_MVUOM9, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forMvValue1Containing(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameContaining(IMESSCLIFRecordEBRData.COL_NAME_MVVALUE1, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forMvValue1EqualTo(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameEqualTo(IMESSCLIFRecordEBRData.COL_NAME_MVVALUE1, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forMvValue1NotEqualTo(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameNotEqualTo(IMESSCLIFRecordEBRData.COL_NAME_MVVALUE1, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forMvValue1StartingWith(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameStartingWith(IMESSCLIFRecordEBRData.COL_NAME_MVVALUE1, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forMvValue10Containing(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameContaining(IMESSCLIFRecordEBRData.COL_NAME_MVVALUE10, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forMvValue10EqualTo(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameEqualTo(IMESSCLIFRecordEBRData.COL_NAME_MVVALUE10, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forMvValue10NotEqualTo(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameNotEqualTo(IMESSCLIFRecordEBRData.COL_NAME_MVVALUE10, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forMvValue10StartingWith(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameStartingWith(IMESSCLIFRecordEBRData.COL_NAME_MVVALUE10, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forMvValue11Containing(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameContaining(IMESSCLIFRecordEBRData.COL_NAME_MVVALUE11, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forMvValue11EqualTo(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameEqualTo(IMESSCLIFRecordEBRData.COL_NAME_MVVALUE11, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forMvValue11NotEqualTo(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameNotEqualTo(IMESSCLIFRecordEBRData.COL_NAME_MVVALUE11, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forMvValue11StartingWith(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameStartingWith(IMESSCLIFRecordEBRData.COL_NAME_MVVALUE11, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forMvValue12Containing(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameContaining(IMESSCLIFRecordEBRData.COL_NAME_MVVALUE12, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forMvValue12EqualTo(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameEqualTo(IMESSCLIFRecordEBRData.COL_NAME_MVVALUE12, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forMvValue12NotEqualTo(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameNotEqualTo(IMESSCLIFRecordEBRData.COL_NAME_MVVALUE12, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forMvValue12StartingWith(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameStartingWith(IMESSCLIFRecordEBRData.COL_NAME_MVVALUE12, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forMvValue13Containing(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameContaining(IMESSCLIFRecordEBRData.COL_NAME_MVVALUE13, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forMvValue13EqualTo(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameEqualTo(IMESSCLIFRecordEBRData.COL_NAME_MVVALUE13, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forMvValue13NotEqualTo(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameNotEqualTo(IMESSCLIFRecordEBRData.COL_NAME_MVVALUE13, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forMvValue13StartingWith(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameStartingWith(IMESSCLIFRecordEBRData.COL_NAME_MVVALUE13, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forMvValue14Containing(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameContaining(IMESSCLIFRecordEBRData.COL_NAME_MVVALUE14, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forMvValue14EqualTo(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameEqualTo(IMESSCLIFRecordEBRData.COL_NAME_MVVALUE14, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forMvValue14NotEqualTo(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameNotEqualTo(IMESSCLIFRecordEBRData.COL_NAME_MVVALUE14, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forMvValue14StartingWith(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameStartingWith(IMESSCLIFRecordEBRData.COL_NAME_MVVALUE14, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forMvValue15Containing(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameContaining(IMESSCLIFRecordEBRData.COL_NAME_MVVALUE15, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forMvValue15EqualTo(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameEqualTo(IMESSCLIFRecordEBRData.COL_NAME_MVVALUE15, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forMvValue15NotEqualTo(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameNotEqualTo(IMESSCLIFRecordEBRData.COL_NAME_MVVALUE15, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forMvValue15StartingWith(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameStartingWith(IMESSCLIFRecordEBRData.COL_NAME_MVVALUE15, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forMvValue16Containing(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameContaining(IMESSCLIFRecordEBRData.COL_NAME_MVVALUE16, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forMvValue16EqualTo(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameEqualTo(IMESSCLIFRecordEBRData.COL_NAME_MVVALUE16, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forMvValue16NotEqualTo(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameNotEqualTo(IMESSCLIFRecordEBRData.COL_NAME_MVVALUE16, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forMvValue16StartingWith(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameStartingWith(IMESSCLIFRecordEBRData.COL_NAME_MVVALUE16, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forMvValue17Containing(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameContaining(IMESSCLIFRecordEBRData.COL_NAME_MVVALUE17, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forMvValue17EqualTo(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameEqualTo(IMESSCLIFRecordEBRData.COL_NAME_MVVALUE17, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forMvValue17NotEqualTo(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameNotEqualTo(IMESSCLIFRecordEBRData.COL_NAME_MVVALUE17, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forMvValue17StartingWith(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameStartingWith(IMESSCLIFRecordEBRData.COL_NAME_MVVALUE17, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forMvValue18Containing(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameContaining(IMESSCLIFRecordEBRData.COL_NAME_MVVALUE18, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forMvValue18EqualTo(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameEqualTo(IMESSCLIFRecordEBRData.COL_NAME_MVVALUE18, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forMvValue18NotEqualTo(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameNotEqualTo(IMESSCLIFRecordEBRData.COL_NAME_MVVALUE18, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forMvValue18StartingWith(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameStartingWith(IMESSCLIFRecordEBRData.COL_NAME_MVVALUE18, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forMvValue19Containing(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameContaining(IMESSCLIFRecordEBRData.COL_NAME_MVVALUE19, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forMvValue19EqualTo(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameEqualTo(IMESSCLIFRecordEBRData.COL_NAME_MVVALUE19, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forMvValue19NotEqualTo(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameNotEqualTo(IMESSCLIFRecordEBRData.COL_NAME_MVVALUE19, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forMvValue19StartingWith(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameStartingWith(IMESSCLIFRecordEBRData.COL_NAME_MVVALUE19, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forMvValue2Containing(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameContaining(IMESSCLIFRecordEBRData.COL_NAME_MVVALUE2, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forMvValue2EqualTo(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameEqualTo(IMESSCLIFRecordEBRData.COL_NAME_MVVALUE2, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forMvValue2NotEqualTo(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameNotEqualTo(IMESSCLIFRecordEBRData.COL_NAME_MVVALUE2, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forMvValue2StartingWith(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameStartingWith(IMESSCLIFRecordEBRData.COL_NAME_MVVALUE2, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forMvValue20Containing(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameContaining(IMESSCLIFRecordEBRData.COL_NAME_MVVALUE20, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forMvValue20EqualTo(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameEqualTo(IMESSCLIFRecordEBRData.COL_NAME_MVVALUE20, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forMvValue20NotEqualTo(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameNotEqualTo(IMESSCLIFRecordEBRData.COL_NAME_MVVALUE20, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forMvValue20StartingWith(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameStartingWith(IMESSCLIFRecordEBRData.COL_NAME_MVVALUE20, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forMvValue3Containing(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameContaining(IMESSCLIFRecordEBRData.COL_NAME_MVVALUE3, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forMvValue3EqualTo(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameEqualTo(IMESSCLIFRecordEBRData.COL_NAME_MVVALUE3, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forMvValue3NotEqualTo(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameNotEqualTo(IMESSCLIFRecordEBRData.COL_NAME_MVVALUE3, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forMvValue3StartingWith(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameStartingWith(IMESSCLIFRecordEBRData.COL_NAME_MVVALUE3, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forMvValue4Containing(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameContaining(IMESSCLIFRecordEBRData.COL_NAME_MVVALUE4, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forMvValue4EqualTo(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameEqualTo(IMESSCLIFRecordEBRData.COL_NAME_MVVALUE4, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forMvValue4NotEqualTo(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameNotEqualTo(IMESSCLIFRecordEBRData.COL_NAME_MVVALUE4, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forMvValue4StartingWith(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameStartingWith(IMESSCLIFRecordEBRData.COL_NAME_MVVALUE4, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forMvValue5Containing(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameContaining(IMESSCLIFRecordEBRData.COL_NAME_MVVALUE5, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forMvValue5EqualTo(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameEqualTo(IMESSCLIFRecordEBRData.COL_NAME_MVVALUE5, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forMvValue5NotEqualTo(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameNotEqualTo(IMESSCLIFRecordEBRData.COL_NAME_MVVALUE5, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forMvValue5StartingWith(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameStartingWith(IMESSCLIFRecordEBRData.COL_NAME_MVVALUE5, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forMvValue6Containing(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameContaining(IMESSCLIFRecordEBRData.COL_NAME_MVVALUE6, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forMvValue6EqualTo(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameEqualTo(IMESSCLIFRecordEBRData.COL_NAME_MVVALUE6, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forMvValue6NotEqualTo(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameNotEqualTo(IMESSCLIFRecordEBRData.COL_NAME_MVVALUE6, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forMvValue6StartingWith(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameStartingWith(IMESSCLIFRecordEBRData.COL_NAME_MVVALUE6, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forMvValue7Containing(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameContaining(IMESSCLIFRecordEBRData.COL_NAME_MVVALUE7, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forMvValue7EqualTo(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameEqualTo(IMESSCLIFRecordEBRData.COL_NAME_MVVALUE7, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forMvValue7NotEqualTo(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameNotEqualTo(IMESSCLIFRecordEBRData.COL_NAME_MVVALUE7, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forMvValue7StartingWith(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameStartingWith(IMESSCLIFRecordEBRData.COL_NAME_MVVALUE7, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forMvValue8Containing(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameContaining(IMESSCLIFRecordEBRData.COL_NAME_MVVALUE8, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forMvValue8EqualTo(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameEqualTo(IMESSCLIFRecordEBRData.COL_NAME_MVVALUE8, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forMvValue8NotEqualTo(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameNotEqualTo(IMESSCLIFRecordEBRData.COL_NAME_MVVALUE8, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forMvValue8StartingWith(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameStartingWith(IMESSCLIFRecordEBRData.COL_NAME_MVVALUE8, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forMvValue9Containing(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameContaining(IMESSCLIFRecordEBRData.COL_NAME_MVVALUE9, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forMvValue9EqualTo(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameEqualTo(IMESSCLIFRecordEBRData.COL_NAME_MVVALUE9, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forMvValue9NotEqualTo(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameNotEqualTo(IMESSCLIFRecordEBRData.COL_NAME_MVVALUE9, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forMvValue9StartingWith(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameStartingWith(IMESSCLIFRecordEBRData.COL_NAME_MVVALUE9, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forOrderNumberContaining(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameContaining(IMESSCLIFRecordEBRData.COL_NAME_ORDERNUMBER, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forOrderNumberEqualTo(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameEqualTo(IMESSCLIFRecordEBRData.COL_NAME_ORDERNUMBER, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forOrderNumberNotEqualTo(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameNotEqualTo(IMESSCLIFRecordEBRData.COL_NAME_ORDERNUMBER, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forOrderNumberStartingWith(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameStartingWith(IMESSCLIFRecordEBRData.COL_NAME_ORDERNUMBER, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forProcessFlagEqualTo(Long value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameEqualTo(IMESSCLIFRecordEBRData.COL_NAME_PROCESSFLAG, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forProcessFlagGreaterThanOrEqualTo(Long value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameGreaterThanOrEqualTo(IMESSCLIFRecordEBRData.COL_NAME_PROCESSFLAG, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forProcessFlagLessThan(Long value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameLessThan(IMESSCLIFRecordEBRData.COL_NAME_PROCESSFLAG, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forProcessFlagNotEqualTo(Long value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameNotEqualTo(IMESSCLIFRecordEBRData.COL_NAME_PROCESSFLAG, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forRtPhaseKeyEqualTo(Long value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameEqualTo(IMESSCLIFRecordEBRData.COL_NAME_RTPHASEKEY, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forRtPhaseKeyGreaterThanOrEqualTo(Long value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameGreaterThanOrEqualTo(IMESSCLIFRecordEBRData.COL_NAME_RTPHASEKEY, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forRtPhaseKeyLessThan(Long value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameLessThan(IMESSCLIFRecordEBRData.COL_NAME_RTPHASEKEY, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forRtPhaseKeyNotEqualTo(Long value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameNotEqualTo(IMESSCLIFRecordEBRData.COL_NAME_RTPHASEKEY, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forSigKeyEqualTo(Long value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameEqualTo(IMESSCLIFRecordEBRData.COL_NAME_SIGKEY, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forSigKeyGreaterThanOrEqualTo(Long value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameGreaterThanOrEqualTo(IMESSCLIFRecordEBRData.COL_NAME_SIGKEY, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forSigKeyLessThan(Long value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameLessThan(IMESSCLIFRecordEBRData.COL_NAME_SIGKEY, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forSigKeyNotEqualTo(Long value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameNotEqualTo(IMESSCLIFRecordEBRData.COL_NAME_SIGKEY, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forStationNameContaining(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameContaining(IMESSCLIFRecordEBRData.COL_NAME_STATIONNAME, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forStationNameEqualTo(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameEqualTo(IMESSCLIFRecordEBRData.COL_NAME_STATIONNAME, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forStationNameNotEqualTo(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameNotEqualTo(IMESSCLIFRecordEBRData.COL_NAME_STATIONNAME, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forStationNameStartingWith(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameStartingWith(IMESSCLIFRecordEBRData.COL_NAME_STATIONNAME, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forStringKey1Containing(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameContaining(IMESSCLIFRecordEBRData.COL_NAME_STRINGKEY1, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forStringKey1EqualTo(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameEqualTo(IMESSCLIFRecordEBRData.COL_NAME_STRINGKEY1, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forStringKey1NotEqualTo(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameNotEqualTo(IMESSCLIFRecordEBRData.COL_NAME_STRINGKEY1, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forStringKey1StartingWith(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameStartingWith(IMESSCLIFRecordEBRData.COL_NAME_STRINGKEY1, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forStringKey10Containing(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameContaining(IMESSCLIFRecordEBRData.COL_NAME_STRINGKEY10, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forStringKey10EqualTo(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameEqualTo(IMESSCLIFRecordEBRData.COL_NAME_STRINGKEY10, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forStringKey10NotEqualTo(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameNotEqualTo(IMESSCLIFRecordEBRData.COL_NAME_STRINGKEY10, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forStringKey10StartingWith(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameStartingWith(IMESSCLIFRecordEBRData.COL_NAME_STRINGKEY10, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forStringKey11Containing(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameContaining(IMESSCLIFRecordEBRData.COL_NAME_STRINGKEY11, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forStringKey11EqualTo(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameEqualTo(IMESSCLIFRecordEBRData.COL_NAME_STRINGKEY11, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forStringKey11NotEqualTo(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameNotEqualTo(IMESSCLIFRecordEBRData.COL_NAME_STRINGKEY11, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forStringKey11StartingWith(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameStartingWith(IMESSCLIFRecordEBRData.COL_NAME_STRINGKEY11, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forStringKey12Containing(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameContaining(IMESSCLIFRecordEBRData.COL_NAME_STRINGKEY12, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forStringKey12EqualTo(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameEqualTo(IMESSCLIFRecordEBRData.COL_NAME_STRINGKEY12, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forStringKey12NotEqualTo(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameNotEqualTo(IMESSCLIFRecordEBRData.COL_NAME_STRINGKEY12, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forStringKey12StartingWith(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameStartingWith(IMESSCLIFRecordEBRData.COL_NAME_STRINGKEY12, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forStringKey13Containing(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameContaining(IMESSCLIFRecordEBRData.COL_NAME_STRINGKEY13, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forStringKey13EqualTo(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameEqualTo(IMESSCLIFRecordEBRData.COL_NAME_STRINGKEY13, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forStringKey13NotEqualTo(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameNotEqualTo(IMESSCLIFRecordEBRData.COL_NAME_STRINGKEY13, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forStringKey13StartingWith(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameStartingWith(IMESSCLIFRecordEBRData.COL_NAME_STRINGKEY13, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forStringKey14Containing(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameContaining(IMESSCLIFRecordEBRData.COL_NAME_STRINGKEY14, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forStringKey14EqualTo(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameEqualTo(IMESSCLIFRecordEBRData.COL_NAME_STRINGKEY14, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forStringKey14NotEqualTo(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameNotEqualTo(IMESSCLIFRecordEBRData.COL_NAME_STRINGKEY14, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forStringKey14StartingWith(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameStartingWith(IMESSCLIFRecordEBRData.COL_NAME_STRINGKEY14, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forStringKey15Containing(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameContaining(IMESSCLIFRecordEBRData.COL_NAME_STRINGKEY15, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forStringKey15EqualTo(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameEqualTo(IMESSCLIFRecordEBRData.COL_NAME_STRINGKEY15, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forStringKey15NotEqualTo(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameNotEqualTo(IMESSCLIFRecordEBRData.COL_NAME_STRINGKEY15, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forStringKey15StartingWith(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameStartingWith(IMESSCLIFRecordEBRData.COL_NAME_STRINGKEY15, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forStringKey16Containing(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameContaining(IMESSCLIFRecordEBRData.COL_NAME_STRINGKEY16, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forStringKey16EqualTo(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameEqualTo(IMESSCLIFRecordEBRData.COL_NAME_STRINGKEY16, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forStringKey16NotEqualTo(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameNotEqualTo(IMESSCLIFRecordEBRData.COL_NAME_STRINGKEY16, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forStringKey16StartingWith(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameStartingWith(IMESSCLIFRecordEBRData.COL_NAME_STRINGKEY16, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forStringKey17Containing(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameContaining(IMESSCLIFRecordEBRData.COL_NAME_STRINGKEY17, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forStringKey17EqualTo(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameEqualTo(IMESSCLIFRecordEBRData.COL_NAME_STRINGKEY17, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forStringKey17NotEqualTo(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameNotEqualTo(IMESSCLIFRecordEBRData.COL_NAME_STRINGKEY17, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forStringKey17StartingWith(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameStartingWith(IMESSCLIFRecordEBRData.COL_NAME_STRINGKEY17, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forStringKey18Containing(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameContaining(IMESSCLIFRecordEBRData.COL_NAME_STRINGKEY18, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forStringKey18EqualTo(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameEqualTo(IMESSCLIFRecordEBRData.COL_NAME_STRINGKEY18, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forStringKey18NotEqualTo(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameNotEqualTo(IMESSCLIFRecordEBRData.COL_NAME_STRINGKEY18, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forStringKey18StartingWith(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameStartingWith(IMESSCLIFRecordEBRData.COL_NAME_STRINGKEY18, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forStringKey19Containing(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameContaining(IMESSCLIFRecordEBRData.COL_NAME_STRINGKEY19, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forStringKey19EqualTo(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameEqualTo(IMESSCLIFRecordEBRData.COL_NAME_STRINGKEY19, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forStringKey19NotEqualTo(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameNotEqualTo(IMESSCLIFRecordEBRData.COL_NAME_STRINGKEY19, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forStringKey19StartingWith(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameStartingWith(IMESSCLIFRecordEBRData.COL_NAME_STRINGKEY19, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forStringKey2Containing(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameContaining(IMESSCLIFRecordEBRData.COL_NAME_STRINGKEY2, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forStringKey2EqualTo(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameEqualTo(IMESSCLIFRecordEBRData.COL_NAME_STRINGKEY2, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forStringKey2NotEqualTo(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameNotEqualTo(IMESSCLIFRecordEBRData.COL_NAME_STRINGKEY2, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forStringKey2StartingWith(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameStartingWith(IMESSCLIFRecordEBRData.COL_NAME_STRINGKEY2, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forStringKey20Containing(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameContaining(IMESSCLIFRecordEBRData.COL_NAME_STRINGKEY20, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forStringKey20EqualTo(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameEqualTo(IMESSCLIFRecordEBRData.COL_NAME_STRINGKEY20, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forStringKey20NotEqualTo(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameNotEqualTo(IMESSCLIFRecordEBRData.COL_NAME_STRINGKEY20, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forStringKey20StartingWith(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameStartingWith(IMESSCLIFRecordEBRData.COL_NAME_STRINGKEY20, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forStringKey3Containing(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameContaining(IMESSCLIFRecordEBRData.COL_NAME_STRINGKEY3, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forStringKey3EqualTo(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameEqualTo(IMESSCLIFRecordEBRData.COL_NAME_STRINGKEY3, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forStringKey3NotEqualTo(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameNotEqualTo(IMESSCLIFRecordEBRData.COL_NAME_STRINGKEY3, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forStringKey3StartingWith(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameStartingWith(IMESSCLIFRecordEBRData.COL_NAME_STRINGKEY3, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forStringKey4Containing(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameContaining(IMESSCLIFRecordEBRData.COL_NAME_STRINGKEY4, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forStringKey4EqualTo(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameEqualTo(IMESSCLIFRecordEBRData.COL_NAME_STRINGKEY4, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forStringKey4NotEqualTo(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameNotEqualTo(IMESSCLIFRecordEBRData.COL_NAME_STRINGKEY4, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forStringKey4StartingWith(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameStartingWith(IMESSCLIFRecordEBRData.COL_NAME_STRINGKEY4, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forStringKey5Containing(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameContaining(IMESSCLIFRecordEBRData.COL_NAME_STRINGKEY5, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forStringKey5EqualTo(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameEqualTo(IMESSCLIFRecordEBRData.COL_NAME_STRINGKEY5, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forStringKey5NotEqualTo(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameNotEqualTo(IMESSCLIFRecordEBRData.COL_NAME_STRINGKEY5, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forStringKey5StartingWith(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameStartingWith(IMESSCLIFRecordEBRData.COL_NAME_STRINGKEY5, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forStringKey6Containing(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameContaining(IMESSCLIFRecordEBRData.COL_NAME_STRINGKEY6, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forStringKey6EqualTo(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameEqualTo(IMESSCLIFRecordEBRData.COL_NAME_STRINGKEY6, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forStringKey6NotEqualTo(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameNotEqualTo(IMESSCLIFRecordEBRData.COL_NAME_STRINGKEY6, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forStringKey6StartingWith(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameStartingWith(IMESSCLIFRecordEBRData.COL_NAME_STRINGKEY6, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forStringKey7Containing(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameContaining(IMESSCLIFRecordEBRData.COL_NAME_STRINGKEY7, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forStringKey7EqualTo(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameEqualTo(IMESSCLIFRecordEBRData.COL_NAME_STRINGKEY7, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forStringKey7NotEqualTo(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameNotEqualTo(IMESSCLIFRecordEBRData.COL_NAME_STRINGKEY7, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forStringKey7StartingWith(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameStartingWith(IMESSCLIFRecordEBRData.COL_NAME_STRINGKEY7, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forStringKey8Containing(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameContaining(IMESSCLIFRecordEBRData.COL_NAME_STRINGKEY8, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forStringKey8EqualTo(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameEqualTo(IMESSCLIFRecordEBRData.COL_NAME_STRINGKEY8, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forStringKey8NotEqualTo(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameNotEqualTo(IMESSCLIFRecordEBRData.COL_NAME_STRINGKEY8, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forStringKey8StartingWith(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameStartingWith(IMESSCLIFRecordEBRData.COL_NAME_STRINGKEY8, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forStringKey9Containing(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameContaining(IMESSCLIFRecordEBRData.COL_NAME_STRINGKEY9, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forStringKey9EqualTo(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameEqualTo(IMESSCLIFRecordEBRData.COL_NAME_STRINGKEY9, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forStringKey9NotEqualTo(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameNotEqualTo(IMESSCLIFRecordEBRData.COL_NAME_STRINGKEY9, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forStringKey9StartingWith(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameStartingWith(IMESSCLIFRecordEBRData.COL_NAME_STRINGKEY9, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forStringValue1Containing(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameContaining(IMESSCLIFRecordEBRData.COL_NAME_STRINGVALUE1, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forStringValue1EqualTo(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameEqualTo(IMESSCLIFRecordEBRData.COL_NAME_STRINGVALUE1, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forStringValue1NotEqualTo(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameNotEqualTo(IMESSCLIFRecordEBRData.COL_NAME_STRINGVALUE1, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forStringValue1StartingWith(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameStartingWith(IMESSCLIFRecordEBRData.COL_NAME_STRINGVALUE1, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forStringValue10Containing(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameContaining(IMESSCLIFRecordEBRData.COL_NAME_STRINGVALUE10, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forStringValue10EqualTo(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameEqualTo(IMESSCLIFRecordEBRData.COL_NAME_STRINGVALUE10, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forStringValue10NotEqualTo(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameNotEqualTo(IMESSCLIFRecordEBRData.COL_NAME_STRINGVALUE10, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forStringValue10StartingWith(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameStartingWith(IMESSCLIFRecordEBRData.COL_NAME_STRINGVALUE10, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forStringValue11Containing(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameContaining(IMESSCLIFRecordEBRData.COL_NAME_STRINGVALUE11, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forStringValue11EqualTo(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameEqualTo(IMESSCLIFRecordEBRData.COL_NAME_STRINGVALUE11, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forStringValue11NotEqualTo(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameNotEqualTo(IMESSCLIFRecordEBRData.COL_NAME_STRINGVALUE11, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forStringValue11StartingWith(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameStartingWith(IMESSCLIFRecordEBRData.COL_NAME_STRINGVALUE11, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forStringValue12Containing(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameContaining(IMESSCLIFRecordEBRData.COL_NAME_STRINGVALUE12, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forStringValue12EqualTo(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameEqualTo(IMESSCLIFRecordEBRData.COL_NAME_STRINGVALUE12, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forStringValue12NotEqualTo(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameNotEqualTo(IMESSCLIFRecordEBRData.COL_NAME_STRINGVALUE12, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forStringValue12StartingWith(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameStartingWith(IMESSCLIFRecordEBRData.COL_NAME_STRINGVALUE12, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forStringValue13Containing(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameContaining(IMESSCLIFRecordEBRData.COL_NAME_STRINGVALUE13, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forStringValue13EqualTo(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameEqualTo(IMESSCLIFRecordEBRData.COL_NAME_STRINGVALUE13, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forStringValue13NotEqualTo(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameNotEqualTo(IMESSCLIFRecordEBRData.COL_NAME_STRINGVALUE13, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forStringValue13StartingWith(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameStartingWith(IMESSCLIFRecordEBRData.COL_NAME_STRINGVALUE13, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forStringValue14Containing(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameContaining(IMESSCLIFRecordEBRData.COL_NAME_STRINGVALUE14, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forStringValue14EqualTo(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameEqualTo(IMESSCLIFRecordEBRData.COL_NAME_STRINGVALUE14, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forStringValue14NotEqualTo(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameNotEqualTo(IMESSCLIFRecordEBRData.COL_NAME_STRINGVALUE14, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forStringValue14StartingWith(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameStartingWith(IMESSCLIFRecordEBRData.COL_NAME_STRINGVALUE14, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forStringValue15Containing(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameContaining(IMESSCLIFRecordEBRData.COL_NAME_STRINGVALUE15, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forStringValue15EqualTo(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameEqualTo(IMESSCLIFRecordEBRData.COL_NAME_STRINGVALUE15, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forStringValue15NotEqualTo(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameNotEqualTo(IMESSCLIFRecordEBRData.COL_NAME_STRINGVALUE15, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forStringValue15StartingWith(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameStartingWith(IMESSCLIFRecordEBRData.COL_NAME_STRINGVALUE15, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forStringValue16Containing(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameContaining(IMESSCLIFRecordEBRData.COL_NAME_STRINGVALUE16, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forStringValue16EqualTo(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameEqualTo(IMESSCLIFRecordEBRData.COL_NAME_STRINGVALUE16, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forStringValue16NotEqualTo(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameNotEqualTo(IMESSCLIFRecordEBRData.COL_NAME_STRINGVALUE16, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forStringValue16StartingWith(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameStartingWith(IMESSCLIFRecordEBRData.COL_NAME_STRINGVALUE16, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forStringValue17Containing(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameContaining(IMESSCLIFRecordEBRData.COL_NAME_STRINGVALUE17, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forStringValue17EqualTo(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameEqualTo(IMESSCLIFRecordEBRData.COL_NAME_STRINGVALUE17, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forStringValue17NotEqualTo(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameNotEqualTo(IMESSCLIFRecordEBRData.COL_NAME_STRINGVALUE17, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forStringValue17StartingWith(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameStartingWith(IMESSCLIFRecordEBRData.COL_NAME_STRINGVALUE17, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forStringValue18Containing(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameContaining(IMESSCLIFRecordEBRData.COL_NAME_STRINGVALUE18, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forStringValue18EqualTo(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameEqualTo(IMESSCLIFRecordEBRData.COL_NAME_STRINGVALUE18, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forStringValue18NotEqualTo(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameNotEqualTo(IMESSCLIFRecordEBRData.COL_NAME_STRINGVALUE18, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forStringValue18StartingWith(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameStartingWith(IMESSCLIFRecordEBRData.COL_NAME_STRINGVALUE18, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forStringValue19Containing(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameContaining(IMESSCLIFRecordEBRData.COL_NAME_STRINGVALUE19, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forStringValue19EqualTo(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameEqualTo(IMESSCLIFRecordEBRData.COL_NAME_STRINGVALUE19, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forStringValue19NotEqualTo(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameNotEqualTo(IMESSCLIFRecordEBRData.COL_NAME_STRINGVALUE19, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forStringValue19StartingWith(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameStartingWith(IMESSCLIFRecordEBRData.COL_NAME_STRINGVALUE19, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forStringValue2Containing(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameContaining(IMESSCLIFRecordEBRData.COL_NAME_STRINGVALUE2, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forStringValue2EqualTo(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameEqualTo(IMESSCLIFRecordEBRData.COL_NAME_STRINGVALUE2, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forStringValue2NotEqualTo(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameNotEqualTo(IMESSCLIFRecordEBRData.COL_NAME_STRINGVALUE2, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forStringValue2StartingWith(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameStartingWith(IMESSCLIFRecordEBRData.COL_NAME_STRINGVALUE2, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forStringValue20Containing(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameContaining(IMESSCLIFRecordEBRData.COL_NAME_STRINGVALUE20, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forStringValue20EqualTo(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameEqualTo(IMESSCLIFRecordEBRData.COL_NAME_STRINGVALUE20, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forStringValue20NotEqualTo(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameNotEqualTo(IMESSCLIFRecordEBRData.COL_NAME_STRINGVALUE20, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forStringValue20StartingWith(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameStartingWith(IMESSCLIFRecordEBRData.COL_NAME_STRINGVALUE20, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forStringValue3Containing(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameContaining(IMESSCLIFRecordEBRData.COL_NAME_STRINGVALUE3, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forStringValue3EqualTo(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameEqualTo(IMESSCLIFRecordEBRData.COL_NAME_STRINGVALUE3, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forStringValue3NotEqualTo(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameNotEqualTo(IMESSCLIFRecordEBRData.COL_NAME_STRINGVALUE3, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forStringValue3StartingWith(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameStartingWith(IMESSCLIFRecordEBRData.COL_NAME_STRINGVALUE3, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forStringValue4Containing(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameContaining(IMESSCLIFRecordEBRData.COL_NAME_STRINGVALUE4, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forStringValue4EqualTo(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameEqualTo(IMESSCLIFRecordEBRData.COL_NAME_STRINGVALUE4, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forStringValue4NotEqualTo(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameNotEqualTo(IMESSCLIFRecordEBRData.COL_NAME_STRINGVALUE4, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forStringValue4StartingWith(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameStartingWith(IMESSCLIFRecordEBRData.COL_NAME_STRINGVALUE4, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forStringValue5Containing(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameContaining(IMESSCLIFRecordEBRData.COL_NAME_STRINGVALUE5, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forStringValue5EqualTo(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameEqualTo(IMESSCLIFRecordEBRData.COL_NAME_STRINGVALUE5, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forStringValue5NotEqualTo(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameNotEqualTo(IMESSCLIFRecordEBRData.COL_NAME_STRINGVALUE5, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forStringValue5StartingWith(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameStartingWith(IMESSCLIFRecordEBRData.COL_NAME_STRINGVALUE5, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forStringValue6Containing(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameContaining(IMESSCLIFRecordEBRData.COL_NAME_STRINGVALUE6, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forStringValue6EqualTo(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameEqualTo(IMESSCLIFRecordEBRData.COL_NAME_STRINGVALUE6, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forStringValue6NotEqualTo(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameNotEqualTo(IMESSCLIFRecordEBRData.COL_NAME_STRINGVALUE6, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forStringValue6StartingWith(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameStartingWith(IMESSCLIFRecordEBRData.COL_NAME_STRINGVALUE6, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forStringValue7Containing(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameContaining(IMESSCLIFRecordEBRData.COL_NAME_STRINGVALUE7, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forStringValue7EqualTo(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameEqualTo(IMESSCLIFRecordEBRData.COL_NAME_STRINGVALUE7, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forStringValue7NotEqualTo(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameNotEqualTo(IMESSCLIFRecordEBRData.COL_NAME_STRINGVALUE7, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forStringValue7StartingWith(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameStartingWith(IMESSCLIFRecordEBRData.COL_NAME_STRINGVALUE7, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forStringValue8Containing(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameContaining(IMESSCLIFRecordEBRData.COL_NAME_STRINGVALUE8, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forStringValue8EqualTo(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameEqualTo(IMESSCLIFRecordEBRData.COL_NAME_STRINGVALUE8, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forStringValue8NotEqualTo(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameNotEqualTo(IMESSCLIFRecordEBRData.COL_NAME_STRINGVALUE8, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forStringValue8StartingWith(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameStartingWith(IMESSCLIFRecordEBRData.COL_NAME_STRINGVALUE8, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forStringValue9Containing(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameContaining(IMESSCLIFRecordEBRData.COL_NAME_STRINGVALUE9, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forStringValue9EqualTo(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameEqualTo(IMESSCLIFRecordEBRData.COL_NAME_STRINGVALUE9, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forStringValue9NotEqualTo(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameNotEqualTo(IMESSCLIFRecordEBRData.COL_NAME_STRINGVALUE9, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forStringValue9StartingWith(String value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameStartingWith(IMESSCLIFRecordEBRData.COL_NAME_STRINGVALUE9, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forWmsProcessFlagEqualTo(Long value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameEqualTo(IMESSCLIFRecordEBRData.COL_NAME_WMSPROCESSFLAG, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forWmsProcessFlagGreaterThanOrEqualTo(Long value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameGreaterThanOrEqualTo(IMESSCLIFRecordEBRData.COL_NAME_WMSPROCESSFLAG, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forWmsProcessFlagLessThan(Long value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameLessThan(IMESSCLIFRecordEBRData.COL_NAME_WMSPROCESSFLAG, value);
      }

      @Override
      public IMESSCLIFRecordEBRDataFilter forWmsProcessFlagNotEqualTo(Long value) //
              throws DatasweepException {
          return (IMESSCLIFRecordEBRDataFilter) forColumnNameNotEqualTo(IMESSCLIFRecordEBRData.COL_NAME_WMSPROCESSFLAG, value);
      }

}