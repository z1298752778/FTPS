package com.leateck.phase.identifyequipment0100;

/**
 * This file is generated by the PhaseGenerator
 *
 * Please do not modify this file manually !!
 */
import java.util.List;

import com.datasweep.compatibility.client.DatasweepException;
import com.datasweep.compatibility.client.Server;
import com.rockwell.mes.commons.base.ifc.objects.MESATObject;
import com.rockwell.mes.commons.base.ifc.objects.MESATObjectFilter;
import com.rockwell.mes.commons.base.ifc.services.PCContext;
import com.rockwell.mes.services.s88.ifc.execution.IMESRtPhase;

import com.rockwell.mes.services.s88equipment.ifc.IMESS88Equipment; 


/**
 * Generated class definition
 */
public abstract class MESGeneratedRtPhaseOutputIdentEq0100Filter extends MESATObjectFilter  {

    /** Generated attribute definition */
    private static final long serialVersionUID = 1L;

    /** Generated attribute definition */
    private static final String ATDEFINITION_NAME = "RS_PhOutIdentEq0100";

    /**
     * Generated method definition
     *
     * @param server The Server object
     */
    public MESGeneratedRtPhaseOutputIdentEq0100Filter(Server server) {
        super(server, ATDEFINITION_NAME);
    }

    /**
     * Generated method definition
     *
     */
    public MESGeneratedRtPhaseOutputIdentEq0100Filter() {
        super(PCContext.getServerImpl(), ATDEFINITION_NAME);
    }

    /**
     * Generated method definition
     *
     * @return the list of the objects
     */
    @Override
    public List<MESRtPhaseOutputIdentEq0100> getFilteredObjects () {
        return MESATObject.getFilteredMESATObjectList(this, MESRtPhaseOutputIdentEq0100.class);
    }

    /**
     * Generated method definition
     *
     * @param value the value to be filtered for
     * @return the filter object
     * @throws DatasweepException the PC exception
     */
    public MESRtPhaseOutputIdentEq0100Filter forParentEqualTo(IMESRtPhase value) //
            throws DatasweepException {
        String columnName = MESRtPhaseOutputIdentEq0100.COL_NAME_PARENT;
        return (MESRtPhaseOutputIdentEq0100Filter) forColumnNameEqualTo(columnName, Long.valueOf(value.getKey()));
    }

    /**
     * Generated method definition
     *
     * @param value the value to be filtered for
     * @return the filter object
     * @throws DatasweepException the PC exception
     */
    public MESRtPhaseOutputIdentEq0100Filter forParentNotEqualTo(IMESRtPhase value) //
            throws DatasweepException {
        String columnName = MESRtPhaseOutputIdentEq0100.COL_NAME_PARENT;
        return (MESRtPhaseOutputIdentEq0100Filter) forColumnNameNotEqualTo(columnName, Long.valueOf(value.getKey()));
    }



    /**
     * Generated method definition
     *
     * @param value the value to be filtered for
     * @return the filter object
     * @throws DatasweepException the PC exception
     */
    public MESRtPhaseOutputIdentEq0100Filter forEqIdEqualTo(String value) //
            throws DatasweepException {
        return (MESRtPhaseOutputIdentEq0100Filter) forColumnNameEqualTo("RS_eqId", value);
    }

    /**
     * Generated method definition
     *
     * @param value the value to be filtered for
     * @return the filter object
     * @throws DatasweepException the PC exception
     */
    public MESRtPhaseOutputIdentEq0100Filter forEqIdNotEqualTo(String value) //
            throws DatasweepException {
        return (MESRtPhaseOutputIdentEq0100Filter) forColumnNameNotEqualTo("RS_eqId", value);
    }

    /**
     * Generated method definition
     *
     * @param value the value to be filtered for
     * @return the filter object
     * @throws DatasweepException the PC exception
     */
    public MESRtPhaseOutputIdentEq0100Filter forEqIdContaining(String value) //
            throws DatasweepException {
        return (MESRtPhaseOutputIdentEq0100Filter) forColumnNameContaining("RS_eqId", value);
    }

    /**
     * Generated method definition
     *
     * @param value the value to be filtered for
     * @return the filter object
     * @throws DatasweepException the PC exception
     */
    public MESRtPhaseOutputIdentEq0100Filter forEqIdStartingWith(String value) //
            throws DatasweepException {
        return (MESRtPhaseOutputIdentEq0100Filter) forColumnNameStartingWith("RS_eqId", value);
    }


    /**
     * Generated method definition
     *
     * @param value the value to be filtered for
     * @return the filter object
     * @throws DatasweepException the PC exception
     */
    public MESRtPhaseOutputIdentEq0100Filter forEqObjectEqualTo(IMESS88Equipment value) //
            throws DatasweepException {
        return (MESRtPhaseOutputIdentEq0100Filter) forColumnNameEqualTo("RS_eqObject", value);
    }

    /**
     * Generated method definition
     *
     * @param value the value to be filtered for
     * @return the filter object
     * @throws DatasweepException the PC exception
     */
    public MESRtPhaseOutputIdentEq0100Filter forEqObjectNotEqualTo(IMESS88Equipment value) //
            throws DatasweepException {
        return (MESRtPhaseOutputIdentEq0100Filter) forColumnNameNotEqualTo("RS_eqObject", value);
    }


    /**
     * Generated method definition
     *
     * @param value the value to be filtered for
     * @return the filter object
     * @throws DatasweepException the PC exception
     */
    public MESRtPhaseOutputIdentEq0100Filter forEqShortDescriptionEqualTo(String value) //
            throws DatasweepException {
        return (MESRtPhaseOutputIdentEq0100Filter) forColumnNameEqualTo("RS_eqShortDescription", value);
    }

    /**
     * Generated method definition
     *
     * @param value the value to be filtered for
     * @return the filter object
     * @throws DatasweepException the PC exception
     */
    public MESRtPhaseOutputIdentEq0100Filter forEqShortDescriptionNotEqualTo(String value) //
            throws DatasweepException {
        return (MESRtPhaseOutputIdentEq0100Filter) forColumnNameNotEqualTo("RS_eqShortDescription", value);
    }

    /**
     * Generated method definition
     *
     * @param value the value to be filtered for
     * @return the filter object
     * @throws DatasweepException the PC exception
     */
    public MESRtPhaseOutputIdentEq0100Filter forEqShortDescriptionContaining(String value) //
            throws DatasweepException {
        return (MESRtPhaseOutputIdentEq0100Filter) forColumnNameContaining("RS_eqShortDescription", value);
    }

    /**
     * Generated method definition
     *
     * @param value the value to be filtered for
     * @return the filter object
     * @throws DatasweepException the PC exception
     */
    public MESRtPhaseOutputIdentEq0100Filter forEqShortDescriptionStartingWith(String value) //
            throws DatasweepException {
        return (MESRtPhaseOutputIdentEq0100Filter) forColumnNameStartingWith("RS_eqShortDescription", value);
    }


    /**
     * Generated method definition
     *
     * @param value the value to be filtered for
     * @return the filter object
     * @throws DatasweepException the PC exception
     */
    public MESRtPhaseOutputIdentEq0100Filter forResultEqualTo(String value) //
            throws DatasweepException {
        return (MESRtPhaseOutputIdentEq0100Filter) forColumnNameEqualTo("RS_Result", value);
    }

    /**
     * Generated method definition
     *
     * @param value the value to be filtered for
     * @return the filter object
     * @throws DatasweepException the PC exception
     */
    public MESRtPhaseOutputIdentEq0100Filter forResultNotEqualTo(String value) //
            throws DatasweepException {
        return (MESRtPhaseOutputIdentEq0100Filter) forColumnNameNotEqualTo("RS_Result", value);
    }

    /**
     * Generated method definition
     *
     * @param value the value to be filtered for
     * @return the filter object
     * @throws DatasweepException the PC exception
     */
    public MESRtPhaseOutputIdentEq0100Filter forResultContaining(String value) //
            throws DatasweepException {
        return (MESRtPhaseOutputIdentEq0100Filter) forColumnNameContaining("RS_Result", value);
    }

    /**
     * Generated method definition
     *
     * @param value the value to be filtered for
     * @return the filter object
     * @throws DatasweepException the PC exception
     */
    public MESRtPhaseOutputIdentEq0100Filter forResultStartingWith(String value) //
            throws DatasweepException {
        return (MESRtPhaseOutputIdentEq0100Filter) forColumnNameStartingWith("RS_Result", value);
    }


    /**
     * Generated method definition
     *
     * @param value the value to be filtered for
     * @return the filter object
     * @throws DatasweepException the PC exception
     */
    public MESRtPhaseOutputIdentEq0100Filter forIsCleanEqualTo(Boolean value) //
            throws DatasweepException {
        return (MESRtPhaseOutputIdentEq0100Filter) forColumnNameEqualTo("RS_IsClean", value);
    }

    /**
     * Generated method definition
     *
     * @param value the value to be filtered for
     * @return the filter object
     * @throws DatasweepException the PC exception
     */
    public MESRtPhaseOutputIdentEq0100Filter forIsCleanNotEqualTo(Boolean value) //
            throws DatasweepException {
        return (MESRtPhaseOutputIdentEq0100Filter) forColumnNameNotEqualTo("RS_IsClean", value);
    }

}
