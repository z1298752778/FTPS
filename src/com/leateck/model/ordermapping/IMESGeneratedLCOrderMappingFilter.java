package com.leateck.model.ordermapping;

/**
 * This file was generated by ATDefAccessClassGenerator and FMPP 2.3.15
 *
 * Please do not modify this file manually !!
 */
import com.leateck.model.ordermapping.IMESLCOrderMapping;
import com.leateck.model.ordermapping.IMESLCOrderMappingFilter;
import com.datasweep.compatibility.client.DatasweepException;
import com.rockwell.mes.commons.base.ifc.objects.IMESATObjectFilter;
import java.util.List;

/**
 * Generated filter interface for application table LC_OrderMapping.
 * 
 * @ftps.exclude 
 */
public interface IMESGeneratedLCOrderMappingFilter extends IMESATObjectFilter {

    /**
     * Generated method definition
     * 
     * @return the list of the objects
     */
    @Override
    public List<IMESLCOrderMapping> getFilteredObjects();

    /**
     * Generated method definition
     * 
     * @param value the value to be filtered for
     * @return the filter object
     * @throws DatasweepException thrown when error occurs
     */
    public IMESLCOrderMappingFilter forCreateuserContaining(String value) //
            throws DatasweepException;

    /**
     * Generated method definition
     * 
     * @param value the value to be filtered for
     * @return the filter object
     * @throws DatasweepException thrown when error occurs
     */
    public IMESLCOrderMappingFilter forCreateuserEqualTo(String value) //
            throws DatasweepException;

    /**
     * Generated method definition
     * 
     * @param value the value to be filtered for
     * @return the filter object
     * @throws DatasweepException thrown when error occurs
     */
    public IMESLCOrderMappingFilter forCreateuserNotEqualTo(String value) //
            throws DatasweepException;

    /**
     * Generated method definition
     * 
     * @param value the value to be filtered for
     * @return the filter object
     * @throws DatasweepException thrown when error occurs
     */
    public IMESLCOrderMappingFilter forCreateuserStartingWith(String value) //
            throws DatasweepException;

    /**
     * Generated method definition
     * 
     * @param value the value to be filtered for
     * @return the filter object
     * @throws DatasweepException thrown when error occurs
     */
    public IMESLCOrderMappingFilter forDelflagEqualTo(Long value) //
            throws DatasweepException;

    /**
     * Generated method definition
     * 
     * @param value the value to be filtered for
     * @return the filter object
     * @throws DatasweepException thrown when error occurs
     */
    public IMESLCOrderMappingFilter forDelflagGreaterThanOrEqualTo(Long value) //
            throws DatasweepException;

    /**
     * Generated method definition
     * 
     * @param value the value to be filtered for
     * @return the filter object
     * @throws DatasweepException thrown when error occurs
     */
    public IMESLCOrderMappingFilter forDelflagLessThan(Long value) //
            throws DatasweepException;

    /**
     * Generated method definition
     * 
     * @param value the value to be filtered for
     * @return the filter object
     * @throws DatasweepException thrown when error occurs
     */
    public IMESLCOrderMappingFilter forDelflagNotEqualTo(Long value) //
            throws DatasweepException;

    /**
     * Generated method definition
     * 
     * @param value the value to be filtered for
     * @return the filter object
     * @throws DatasweepException thrown when error occurs
     */
    public IMESLCOrderMappingFilter forLastmodifieduserContaining(String value) //
            throws DatasweepException;

    /**
     * Generated method definition
     * 
     * @param value the value to be filtered for
     * @return the filter object
     * @throws DatasweepException thrown when error occurs
     */
    public IMESLCOrderMappingFilter forLastmodifieduserEqualTo(String value) //
            throws DatasweepException;

    /**
     * Generated method definition
     * 
     * @param value the value to be filtered for
     * @return the filter object
     * @throws DatasweepException thrown when error occurs
     */
    public IMESLCOrderMappingFilter forLastmodifieduserNotEqualTo(String value) //
            throws DatasweepException;

    /**
     * Generated method definition
     * 
     * @param value the value to be filtered for
     * @return the filter object
     * @throws DatasweepException thrown when error occurs
     */
    public IMESLCOrderMappingFilter forLastmodifieduserStartingWith(String value) //
            throws DatasweepException;

    /**
     * Generated method definition
     * 
     * @param value the value to be filtered for
     * @return the filter object
     * @throws DatasweepException thrown when error occurs
     */
    public IMESLCOrderMappingFilter forMappingordernameContaining(String value) //
            throws DatasweepException;

    /**
     * Generated method definition
     * 
     * @param value the value to be filtered for
     * @return the filter object
     * @throws DatasweepException thrown when error occurs
     */
    public IMESLCOrderMappingFilter forMappingordernameEqualTo(String value) //
            throws DatasweepException;

    /**
     * Generated method definition
     * 
     * @param value the value to be filtered for
     * @return the filter object
     * @throws DatasweepException thrown when error occurs
     */
    public IMESLCOrderMappingFilter forMappingordernameNotEqualTo(String value) //
            throws DatasweepException;

    /**
     * Generated method definition
     * 
     * @param value the value to be filtered for
     * @return the filter object
     * @throws DatasweepException thrown when error occurs
     */
    public IMESLCOrderMappingFilter forMappingordernameStartingWith(String value) //
            throws DatasweepException;

    /**
     * Generated method definition
     * 
     * @param value the value to be filtered for
     * @return the filter object
     * @throws DatasweepException thrown when error occurs
     */
    public IMESLCOrderMappingFilter forMappingtypeEqualTo(Long value) //
            throws DatasweepException;

    /**
     * Generated method definition
     * 
     * @param value the value to be filtered for
     * @return the filter object
     * @throws DatasweepException thrown when error occurs
     */
    public IMESLCOrderMappingFilter forMappingtypeGreaterThanOrEqualTo(Long value) //
            throws DatasweepException;

    /**
     * Generated method definition
     * 
     * @param value the value to be filtered for
     * @return the filter object
     * @throws DatasweepException thrown when error occurs
     */
    public IMESLCOrderMappingFilter forMappingtypeLessThan(Long value) //
            throws DatasweepException;

    /**
     * Generated method definition
     * 
     * @param value the value to be filtered for
     * @return the filter object
     * @throws DatasweepException thrown when error occurs
     */
    public IMESLCOrderMappingFilter forMappingtypeNotEqualTo(Long value) //
            throws DatasweepException;

    /**
     * Generated method definition
     * 
     * @param value the value to be filtered for
     * @return the filter object
     * @throws DatasweepException thrown when error occurs
     */
    public IMESLCOrderMappingFilter forOrdernameContaining(String value) //
            throws DatasweepException;

    /**
     * Generated method definition
     * 
     * @param value the value to be filtered for
     * @return the filter object
     * @throws DatasweepException thrown when error occurs
     */
    public IMESLCOrderMappingFilter forOrdernameEqualTo(String value) //
            throws DatasweepException;

    /**
     * Generated method definition
     * 
     * @param value the value to be filtered for
     * @return the filter object
     * @throws DatasweepException thrown when error occurs
     */
    public IMESLCOrderMappingFilter forOrdernameNotEqualTo(String value) //
            throws DatasweepException;

    /**
     * Generated method definition
     * 
     * @param value the value to be filtered for
     * @return the filter object
     * @throws DatasweepException thrown when error occurs
     */
    public IMESLCOrderMappingFilter forOrdernameStartingWith(String value) //
            throws DatasweepException;

    /**
     * Generated method definition
     * 
     * @param value the value to be filtered for
     * @return the filter object
     * @throws DatasweepException thrown when error occurs
     */
    public IMESLCOrderMappingFilter forTypeEqualTo(Long value) //
            throws DatasweepException;

    /**
     * Generated method definition
     * 
     * @param value the value to be filtered for
     * @return the filter object
     * @throws DatasweepException thrown when error occurs
     */
    public IMESLCOrderMappingFilter forTypeGreaterThanOrEqualTo(Long value) //
            throws DatasweepException;

    /**
     * Generated method definition
     * 
     * @param value the value to be filtered for
     * @return the filter object
     * @throws DatasweepException thrown when error occurs
     */
    public IMESLCOrderMappingFilter forTypeLessThan(Long value) //
            throws DatasweepException;

    /**
     * Generated method definition
     * 
     * @param value the value to be filtered for
     * @return the filter object
     * @throws DatasweepException thrown when error occurs
     */
    public IMESLCOrderMappingFilter forTypeNotEqualTo(Long value) //
            throws DatasweepException;

}