package com.leateck.model.ordermapping;

/**
 * This file is generated by ATDefAccessClassGenerator and FMPP 2.3.15
 *
 * Please do not modify this file manually !!
 */
import com.leateck.model.ordermapping.IMESGeneratedLCOrderMapping;
import com.datasweep.compatibility.client.ATRow;
import com.datasweep.compatibility.client.Response;
import com.rockwell.mes.commons.base.ifc.objects.MESATObject;

/**
 * Generated class definition for application table LC_OrderMapping.<BR>
 * Application table description: 
 */
public abstract class MESGeneratedLCOrderMapping extends MESATObject //
        implements IMESGeneratedLCOrderMapping {

    @Override
    public String getATDefinitionName() {
        return ATDEFINITION_NAME;
    }

    /**
     * Generated constructor
     * 
     * @param key The key of the ATRow to load.
     */
    public MESGeneratedLCOrderMapping(long key) {
        super(key);
    }

    /**
     * Generated copy constructor
     * 
     * @param source The source to copy.
     */
    public MESGeneratedLCOrderMapping(MESGeneratedLCOrderMapping source) {
        super(source);
    }

    /**
     * Generated constructor
     * 
     * @param baseATRow The ATRow to wrap.
     */
    public MESGeneratedLCOrderMapping(ATRow baseATRow) {
        super(baseATRow);
    }

    /**
     * Generated default constructor
     */
    public MESGeneratedLCOrderMapping() {
        super();
    }

    @Override
    protected void synchronizeAfterATRowRefresh() {
        super.synchronizeAfterATRowRefresh();
    }

    @Override
    public String getCreateuser() {
        return (String) this.dgtATRow.getValue(COL_NAME_CREATEUSER);
    }

    @Override
    public void setCreateuser(String value) {
        String oldValue = this.getCreateuser();
        this.dgtATRow.setValue(COL_NAME_CREATEUSER, value);
        firePropertyChange(PROP_NAME_CREATEUSER, oldValue, value);
    }

    @Override
    public Long getDelflag() {
        return (Long) this.dgtATRow.getValue(COL_NAME_DELFLAG);
    }

    @Override
    public void setDelflag(Long value) {
        Long oldValue = this.getDelflag();
        this.dgtATRow.setValue(COL_NAME_DELFLAG, value);
        firePropertyChange(PROP_NAME_DELFLAG, oldValue, value);
    }

    @Override
    public String getLastmodifieduser() {
        return (String) this.dgtATRow.getValue(COL_NAME_LASTMODIFIEDUSER);
    }

    @Override
    public void setLastmodifieduser(String value) {
        String oldValue = this.getLastmodifieduser();
        this.dgtATRow.setValue(COL_NAME_LASTMODIFIEDUSER, value);
        firePropertyChange(PROP_NAME_LASTMODIFIEDUSER, oldValue, value);
    }

    @Override
    public String getMappingordername() {
        return (String) this.dgtATRow.getValue(COL_NAME_MAPPINGORDERNAME);
    }

    @Override
    public void setMappingordername(String value) {
        String oldValue = this.getMappingordername();
        this.dgtATRow.setValue(COL_NAME_MAPPINGORDERNAME, value);
        firePropertyChange(PROP_NAME_MAPPINGORDERNAME, oldValue, value);
    }

    @Override
    public Long getMappingtype() {
        return (Long) this.dgtATRow.getValue(COL_NAME_MAPPINGTYPE);
    }

    @Override
    public void setMappingtype(Long value) {
        Long oldValue = this.getMappingtype();
        this.dgtATRow.setValue(COL_NAME_MAPPINGTYPE, value);
        firePropertyChange(PROP_NAME_MAPPINGTYPE, oldValue, value);
    }

    @Override
    public String getOrdername() {
        return (String) this.dgtATRow.getValue(COL_NAME_ORDERNAME);
    }

    @Override
    public void setOrdername(String value) {
        String oldValue = this.getOrdername();
        this.dgtATRow.setValue(COL_NAME_ORDERNAME, value);
        firePropertyChange(PROP_NAME_ORDERNAME, oldValue, value);
    }

    @Override
    public Long getType() {
        return (Long) this.dgtATRow.getValue(COL_NAME_TYPE);
    }

    @Override
    public void setType(Long value) {
        Long oldValue = this.getType();
        this.dgtATRow.setValue(COL_NAME_TYPE, value);
        firePropertyChange(PROP_NAME_TYPE, oldValue, value);
    }

    @Override
    protected Response prepareATRowForSave() {
        // Check if transient references are valid and store the corresponding keys in the ATRow:
        Response res = super.prepareATRowForSave();



        return res;
    }

}