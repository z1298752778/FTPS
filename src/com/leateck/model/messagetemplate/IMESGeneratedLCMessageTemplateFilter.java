package com.leateck.model.messagetemplate;


/**
 * This file was generated by ATDefAccessClassGenerator and FMPP 2.3.15
 *
 * Please do not modify this file manually !!
 */
import com.datasweep.compatibility.client.DatasweepException;
import com.datasweep.compatibility.client.MeasuredValue;
import com.rockwell.mes.commons.base.ifc.objects.IMESATObjectFilter;
import java.util.List;

/**
 * Generated filter interface for application table LC_MessageTemplate.
 * 
 * @ftps.exclude 
 */
public interface IMESGeneratedLCMessageTemplateFilter extends IMESATObjectFilter {

    /**
     * Generated method definition
     * 
     * @return the list of the objects
     */
    @Override
    public List<IMESLCMessageTemplate> getFilteredObjects();

    /**
     * Generated method definition
     * 
     * @param value the value to be filtered for
     * @return the filter object
     * @throws DatasweepException thrown when error occurs
     */
    public IMESLCMessageTemplateFilter forCodeNameContaining(String value) //
            throws DatasweepException;

    /**
     * Generated method definition
     * 
     * @param value the value to be filtered for
     * @return the filter object
     * @throws DatasweepException thrown when error occurs
     */
    public IMESLCMessageTemplateFilter forCodeNameEqualTo(String value) //
            throws DatasweepException;

    /**
     * Generated method definition
     * 
     * @param value the value to be filtered for
     * @return the filter object
     * @throws DatasweepException thrown when error occurs
     */
    public IMESLCMessageTemplateFilter forCodeNameNotEqualTo(String value) //
            throws DatasweepException;

    /**
     * Generated method definition
     * 
     * @param value the value to be filtered for
     * @return the filter object
     * @throws DatasweepException thrown when error occurs
     */
    public IMESLCMessageTemplateFilter forCodeNameStartingWith(String value) //
            throws DatasweepException;

    /**
     * Generated method definition
     * 
     * @param value the value to be filtered for
     * @return the filter object
     * @throws DatasweepException thrown when error occurs
     */
    public IMESLCMessageTemplateFilter forCriticalTimeEqualTo(MeasuredValue value) //
            throws DatasweepException;

    /**
     * Generated method definition
     * 
     * @param value the value to be filtered for
     * @return the filter object
     * @throws DatasweepException thrown when error occurs
     */
    public IMESLCMessageTemplateFilter forCriticalTimeNotEqualTo(MeasuredValue value) //
            throws DatasweepException;

    /**
     * Generated method definition
     * 
     * @param value the value to be filtered for
     * @return the filter object
     * @throws DatasweepException thrown when error occurs
     */
    public IMESLCMessageTemplateFilter forCustomMessageContaining(String value) //
            throws DatasweepException;

    /**
     * Generated method definition
     * 
     * @param value the value to be filtered for
     * @return the filter object
     * @throws DatasweepException thrown when error occurs
     */
    public IMESLCMessageTemplateFilter forCustomMessageEqualTo(String value) //
            throws DatasweepException;

    /**
     * Generated method definition
     * 
     * @param value the value to be filtered for
     * @return the filter object
     * @throws DatasweepException thrown when error occurs
     */
    public IMESLCMessageTemplateFilter forCustomMessageNotEqualTo(String value) //
            throws DatasweepException;

    /**
     * Generated method definition
     * 
     * @param value the value to be filtered for
     * @return the filter object
     * @throws DatasweepException thrown when error occurs
     */
    public IMESLCMessageTemplateFilter forCustomMessageStartingWith(String value) //
            throws DatasweepException;

    /**
     * Generated method definition
     * 
     * @param value the value to be filtered for
     * @return the filter object
     * @throws DatasweepException thrown when error occurs
     */
    public IMESLCMessageTemplateFilter forMessageIdContaining(String value) //
            throws DatasweepException;

    /**
     * Generated method definition
     * 
     * @param value the value to be filtered for
     * @return the filter object
     * @throws DatasweepException thrown when error occurs
     */
    public IMESLCMessageTemplateFilter forMessageIdEqualTo(String value) //
            throws DatasweepException;

    /**
     * Generated method definition
     * 
     * @param value the value to be filtered for
     * @return the filter object
     * @throws DatasweepException thrown when error occurs
     */
    public IMESLCMessageTemplateFilter forMessageIdNotEqualTo(String value) //
            throws DatasweepException;

    /**
     * Generated method definition
     * 
     * @param value the value to be filtered for
     * @return the filter object
     * @throws DatasweepException thrown when error occurs
     */
    public IMESLCMessageTemplateFilter forMessageIdStartingWith(String value) //
            throws DatasweepException;

    /**
     * Generated method definition
     * 
     * @param value the value to be filtered for
     * @return the filter object
     * @throws DatasweepException thrown when error occurs
     */
    public IMESLCMessageTemplateFilter forStatusEqualTo(Boolean value) //
            throws DatasweepException;

    /**
     * Generated method definition
     * 
     * @param value the value to be filtered for
     * @return the filter object
     * @throws DatasweepException thrown when error occurs
     */
    public IMESLCMessageTemplateFilter forStatusNotEqualTo(Boolean value) //
            throws DatasweepException;

    /**
     * Generated method definition
     * 
     * @param value the value to be filtered for
     * @return the filter object
     * @throws DatasweepException thrown when error occurs
     */
    public IMESLCMessageTemplateFilter forTemplateTypeEqualTo(Long value) //
            throws DatasweepException;

    /**
     * Generated method definition
     * 
     * @param value the value to be filtered for
     * @return the filter object
     * @throws DatasweepException thrown when error occurs
     */
    public IMESLCMessageTemplateFilter forTemplateTypeGreaterThanOrEqualTo(Long value) //
            throws DatasweepException;

    /**
     * Generated method definition
     * 
     * @param value the value to be filtered for
     * @return the filter object
     * @throws DatasweepException thrown when error occurs
     */
    public IMESLCMessageTemplateFilter forTemplateTypeLessThan(Long value) //
            throws DatasweepException;

    /**
     * Generated method definition
     * 
     * @param value the value to be filtered for
     * @return the filter object
     * @throws DatasweepException thrown when error occurs
     */
    public IMESLCMessageTemplateFilter forTemplateTypeNotEqualTo(Long value) //
            throws DatasweepException;

    /**
     * Generated method definition
     * 
     * @param value the value to be filtered for
     * @return the filter object
     * @throws DatasweepException thrown when error occurs
     */
    public IMESLCMessageTemplateFilter forUserContaining(String value) //
            throws DatasweepException;

    /**
     * Generated method definition
     * 
     * @param value the value to be filtered for
     * @return the filter object
     * @throws DatasweepException thrown when error occurs
     */
    public IMESLCMessageTemplateFilter forUserEqualTo(String value) //
            throws DatasweepException;

    /**
     * Generated method definition
     * 
     * @param value the value to be filtered for
     * @return the filter object
     * @throws DatasweepException thrown when error occurs
     */
    public IMESLCMessageTemplateFilter forUserNotEqualTo(String value) //
            throws DatasweepException;

    /**
     * Generated method definition
     * 
     * @param value the value to be filtered for
     * @return the filter object
     * @throws DatasweepException thrown when error occurs
     */
    public IMESLCMessageTemplateFilter forUserStartingWith(String value) //
            throws DatasweepException;

    /**
     * Generated method definition
     * 
     * @param value the value to be filtered for
     * @return the filter object
     * @throws DatasweepException thrown when error occurs
     */
    public IMESLCMessageTemplateFilter forUserGroupContaining(String value) //
            throws DatasweepException;

    /**
     * Generated method definition
     * 
     * @param value the value to be filtered for
     * @return the filter object
     * @throws DatasweepException thrown when error occurs
     */
    public IMESLCMessageTemplateFilter forUserGroupEqualTo(String value) //
            throws DatasweepException;

    /**
     * Generated method definition
     * 
     * @param value the value to be filtered for
     * @return the filter object
     * @throws DatasweepException thrown when error occurs
     */
    public IMESLCMessageTemplateFilter forUserGroupNotEqualTo(String value) //
            throws DatasweepException;

    /**
     * Generated method definition
     * 
     * @param value the value to be filtered for
     * @return the filter object
     * @throws DatasweepException thrown when error occurs
     */
    public IMESLCMessageTemplateFilter forUserGroupStartingWith(String value) //
            throws DatasweepException;

}