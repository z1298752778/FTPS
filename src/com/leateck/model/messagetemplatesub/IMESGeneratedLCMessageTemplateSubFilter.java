package com.leateck.model.messagetemplatesub;


/**
 * This file was generated by ATDefAccessClassGenerator and FMPP 2.3.15
 *
 * Please do not modify this file manually !!
 */
import com.datasweep.compatibility.client.DatasweepException;
import com.datasweep.compatibility.client.MeasuredValue;
import com.leateck.model.messagetemplate.IMESLCMessageTemplate;
import com.rockwell.mes.commons.base.ifc.objects.IMESATObjectFilter;
import java.util.List;

/**
 * Generated filter interface for application table LC_MessageTemplateSub.
 * 
 * @ftps.exclude 
 */
public interface IMESGeneratedLCMessageTemplateSubFilter extends IMESATObjectFilter {

    /**
     * Generated method definition
     * 
     * @return the list of the objects
     */
    @Override
    public List<IMESLCMessageTemplateSub> getFilteredObjects();

    /**
     * Generated method definition
     * 
     * @param value the value to be filtered for
     * @return the filter object
     * @throws DatasweepException thrown when error occurs
     */
    public IMESLCMessageTemplateSubFilter forCriticalTimeEqualTo(MeasuredValue value) //
            throws DatasweepException;

    /**
     * Generated method definition
     * 
     * @param value the value to be filtered for
     * @return the filter object
     * @throws DatasweepException thrown when error occurs
     */
    public IMESLCMessageTemplateSubFilter forCriticalTimeNotEqualTo(MeasuredValue value) //
            throws DatasweepException;

    /**
     * Generated method definition
     * 
     * @param value the value to be filtered for
     * @return the filter object
     * @throws DatasweepException thrown when error occurs
     */
    public IMESLCMessageTemplateSubFilter forEquipStatusModelContaining(String value) //
            throws DatasweepException;

    /**
     * Generated method definition
     * 
     * @param value the value to be filtered for
     * @return the filter object
     * @throws DatasweepException thrown when error occurs
     */
    public IMESLCMessageTemplateSubFilter forEquipStatusModelEqualTo(String value) //
            throws DatasweepException;

    /**
     * Generated method definition
     * 
     * @param value the value to be filtered for
     * @return the filter object
     * @throws DatasweepException thrown when error occurs
     */
    public IMESLCMessageTemplateSubFilter forEquipStatusModelNotEqualTo(String value) //
            throws DatasweepException;

    /**
     * Generated method definition
     * 
     * @param value the value to be filtered for
     * @return the filter object
     * @throws DatasweepException thrown when error occurs
     */
    public IMESLCMessageTemplateSubFilter forEquipStatusModelStartingWith(String value) //
            throws DatasweepException;

    /**
     * Generated method definition
     * 
     * @param value the value to be filtered for
     * @return the filter object
     * @throws DatasweepException thrown when error occurs
     */
    public IMESLCMessageTemplateSubFilter forMessageTemplateEqualTo(IMESLCMessageTemplate value) //
            throws DatasweepException;

    /**
     * Generated method definition
     * 
     * @param value the value to be filtered for
     * @return the filter object
     * @throws DatasweepException thrown when error occurs
     */
    public IMESLCMessageTemplateSubFilter forMessageTemplateNotEqualTo(IMESLCMessageTemplate value) //
            throws DatasweepException;

}