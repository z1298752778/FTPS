package com.leateck.model.processPackRecord;

/**
 * This file was generated by ATDefAccessClassGenerator and FMPP 2.3.15
 *
 * Please do not modify this file manually !!
 */
import com.leateck.model.processPackRecord.IMESLCProcessPackRecord;
import com.leateck.model.processPackRecord.IMESLCProcessPackRecordFilter;
import com.datasweep.compatibility.client.DatasweepException;
import com.datasweep.compatibility.ui.Time;
import com.rockwell.mes.commons.base.ifc.objects.IMESATObjectFilter;
import java.util.List;

/**
 * Generated filter interface for application table LC_ProcessPackRecord.
 * 
 * @ftps.exclude 
 */
public interface IMESGeneratedLCProcessPackRecordFilter extends IMESATObjectFilter {

    /**
     * Generated method definition
     * 
     * @return the list of the objects
     */
    @Override
    public List<IMESLCProcessPackRecord> getFilteredObjects();

    /**
     * Generated method definition
     * 
     * @param value the value to be filtered for
     * @return the filter object
     * @throws DatasweepException thrown when error occurs
     */
    public IMESLCProcessPackRecordFilter forCommentsContaining(String value) //
            throws DatasweepException;

    /**
     * Generated method definition
     * 
     * @param value the value to be filtered for
     * @return the filter object
     * @throws DatasweepException thrown when error occurs
     */
    public IMESLCProcessPackRecordFilter forCommentsEqualTo(String value) //
            throws DatasweepException;

    /**
     * Generated method definition
     * 
     * @param value the value to be filtered for
     * @return the filter object
     * @throws DatasweepException thrown when error occurs
     */
    public IMESLCProcessPackRecordFilter forCommentsNotEqualTo(String value) //
            throws DatasweepException;

    /**
     * Generated method definition
     * 
     * @param value the value to be filtered for
     * @return the filter object
     * @throws DatasweepException thrown when error occurs
     */
    public IMESLCProcessPackRecordFilter forCommentsStartingWith(String value) //
            throws DatasweepException;

    /**
     * Generated method definition
     * 
     * @param value the value to be filtered for
     * @return the filter object
     * @throws DatasweepException thrown when error occurs
     */
    public IMESLCProcessPackRecordFilter forOperatorContaining(String value) //
            throws DatasweepException;

    /**
     * Generated method definition
     * 
     * @param value the value to be filtered for
     * @return the filter object
     * @throws DatasweepException thrown when error occurs
     */
    public IMESLCProcessPackRecordFilter forOperatorEqualTo(String value) //
            throws DatasweepException;

    /**
     * Generated method definition
     * 
     * @param value the value to be filtered for
     * @return the filter object
     * @throws DatasweepException thrown when error occurs
     */
    public IMESLCProcessPackRecordFilter forOperatorNotEqualTo(String value) //
            throws DatasweepException;

    /**
     * Generated method definition
     * 
     * @param value the value to be filtered for
     * @return the filter object
     * @throws DatasweepException thrown when error occurs
     */
    public IMESLCProcessPackRecordFilter forOperatorStartingWith(String value) //
            throws DatasweepException;

    /**
     * Generated method definition
     * 
     * @param value the value to be filtered for
     * @return the filter object
     * @throws DatasweepException thrown when error occurs
     */
    public IMESLCProcessPackRecordFilter forProcessPackDesContaining(String value) //
            throws DatasweepException;

    /**
     * Generated method definition
     * 
     * @param value the value to be filtered for
     * @return the filter object
     * @throws DatasweepException thrown when error occurs
     */
    public IMESLCProcessPackRecordFilter forProcessPackDesEqualTo(String value) //
            throws DatasweepException;

    /**
     * Generated method definition
     * 
     * @param value the value to be filtered for
     * @return the filter object
     * @throws DatasweepException thrown when error occurs
     */
    public IMESLCProcessPackRecordFilter forProcessPackDesNotEqualTo(String value) //
            throws DatasweepException;

    /**
     * Generated method definition
     * 
     * @param value the value to be filtered for
     * @return the filter object
     * @throws DatasweepException thrown when error occurs
     */
    public IMESLCProcessPackRecordFilter forProcessPackDesStartingWith(String value) //
            throws DatasweepException;

    /**
     * Generated method definition
     * 
     * @param value the value to be filtered for
     * @return the filter object
     * @throws DatasweepException thrown when error occurs
     */
    public IMESLCProcessPackRecordFilter forProcessPackIdContaining(String value) //
            throws DatasweepException;

    /**
     * Generated method definition
     * 
     * @param value the value to be filtered for
     * @return the filter object
     * @throws DatasweepException thrown when error occurs
     */
    public IMESLCProcessPackRecordFilter forProcessPackIdEqualTo(String value) //
            throws DatasweepException;

    /**
     * Generated method definition
     * 
     * @param value the value to be filtered for
     * @return the filter object
     * @throws DatasweepException thrown when error occurs
     */
    public IMESLCProcessPackRecordFilter forProcessPackIdNotEqualTo(String value) //
            throws DatasweepException;

    /**
     * Generated method definition
     * 
     * @param value the value to be filtered for
     * @return the filter object
     * @throws DatasweepException thrown when error occurs
     */
    public IMESLCProcessPackRecordFilter forProcessPackIdStartingWith(String value) //
            throws DatasweepException;

    /**
     * Generated method definition
     * 
     * @param value the value to be filtered for
     * @return the filter object
     * @throws DatasweepException thrown when error occurs
     */
    public IMESLCProcessPackRecordFilter forProcessPackStateEqualTo(Long value) //
            throws DatasweepException;

    /**
     * Generated method definition
     * 
     * @param value the value to be filtered for
     * @return the filter object
     * @throws DatasweepException thrown when error occurs
     */
    public IMESLCProcessPackRecordFilter forProcessPackStateGreaterThanOrEqualTo(Long value) //
            throws DatasweepException;

    /**
     * Generated method definition
     * 
     * @param value the value to be filtered for
     * @return the filter object
     * @throws DatasweepException thrown when error occurs
     */
    public IMESLCProcessPackRecordFilter forProcessPackStateLessThan(Long value) //
            throws DatasweepException;

    /**
     * Generated method definition
     * 
     * @param value the value to be filtered for
     * @return the filter object
     * @throws DatasweepException thrown when error occurs
     */
    public IMESLCProcessPackRecordFilter forProcessPackStateNotEqualTo(Long value) //
            throws DatasweepException;

    /**
     * Generated method definition
     * 
     * @param value the value to be filtered for
     * @return the filter object
     * @throws DatasweepException thrown when error occurs
     */
    public IMESLCProcessPackRecordFilter forStateDateEqualTo(Time value) //
            throws DatasweepException;

    /**
     * Generated method definition
     * 
     * @param value the value to be filtered for
     * @return the filter object
     * @throws DatasweepException thrown when error occurs
     */
    public IMESLCProcessPackRecordFilter forStateDateGreaterThanOrEqualTo(Time value) //
            throws DatasweepException;

    /**
     * Generated method definition
     * 
     * @param value the value to be filtered for
     * @return the filter object
     * @throws DatasweepException thrown when error occurs
     */
    public IMESLCProcessPackRecordFilter forStateDateLessThan(Time value) //
            throws DatasweepException;

    /**
     * Generated method definition
     * 
     * @param value the value to be filtered for
     * @return the filter object
     * @throws DatasweepException thrown when error occurs
     */
    public IMESLCProcessPackRecordFilter forStateDateNotEqualTo(Time value) //
            throws DatasweepException;

    /**
     * Generated method definition
     * 
     * @param value the value to be filtered for
     * @return the filter object
     * @throws DatasweepException thrown when error occurs
     */
    public IMESLCProcessPackRecordFilter forVersionContaining(String value) //
            throws DatasweepException;

    /**
     * Generated method definition
     * 
     * @param value the value to be filtered for
     * @return the filter object
     * @throws DatasweepException thrown when error occurs
     */
    public IMESLCProcessPackRecordFilter forVersionEqualTo(String value) //
            throws DatasweepException;

    /**
     * Generated method definition
     * 
     * @param value the value to be filtered for
     * @return the filter object
     * @throws DatasweepException thrown when error occurs
     */
    public IMESLCProcessPackRecordFilter forVersionNotEqualTo(String value) //
            throws DatasweepException;

    /**
     * Generated method definition
     * 
     * @param value the value to be filtered for
     * @return the filter object
     * @throws DatasweepException thrown when error occurs
     */
    public IMESLCProcessPackRecordFilter forVersionStartingWith(String value) //
            throws DatasweepException;

}