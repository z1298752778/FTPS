package com.leateck.parameter.sequencerule0010;

/**
 * This file is generated by ParameterClassManager
 *
 * Please do not modify this file manually !!
 */
import java.util.List;

import com.datasweep.compatibility.client.DatasweepException;
import com.datasweep.compatibility.client.Server;
import com.rockwell.mes.commons.base.ifc.objects.MESATObject;
import com.rockwell.mes.commons.base.ifc.objects.MESATObjectFilter;
import com.rockwell.mes.commons.base.ifc.services.PCContext;



/**
 * Generated class definition
 */
public abstract class MESGeneratedParamSeqRule0100Filter extends MESATObjectFilter  {

    /** Generated attribute definition */
    private static final long serialVersionUID = 1L;

    /** Generated attribute definition */
    private static final String ATDEFINITION_NAME = "CL_ParamSeqRule0100";

    /**
     * Generated method definition
     *
     * @param server The Server object
     */
    public MESGeneratedParamSeqRule0100Filter(Server server) {
        super(server, ATDEFINITION_NAME);
    }

    /**
     * Generated method definition
     *
     */
    public MESGeneratedParamSeqRule0100Filter() {
        super(PCContext.getServerImpl(), ATDEFINITION_NAME);
    }

    /**
     * Generated method definition
     *
     * @param server the corresponding server
     * @param atdefinitionName the name of the at definition
     */
    protected MESGeneratedParamSeqRule0100Filter(Server server, String atdefinitionName) {
        super(server, atdefinitionName);
    }
    
    /**
     * Generated method definition
     *
     * @return the list of the objects
     */
    public List<MESParamSeqRule0100> getFilteredObjects () {
        return MESATObject.getFilteredMESATObjectList(this, MESParamSeqRule0100.class);
    }


    /**
     * Generated method definition
     *
     * @param value the value to be filtered for
     * @return the filter object
     * @throws DatasweepException the PC exception
     */
    public MESParamSeqRule0100Filter forRuleEqualTo(String value) //
            throws DatasweepException {
        return (MESParamSeqRule0100Filter) forColumnNameEqualTo("CL_rule", value);
    }

    /**
     * Generated method definition
     *
     * @param value the value to be filtered for
     * @return the filter object
     * @throws DatasweepException the PC exception
     */
    public MESParamSeqRule0100Filter forRuleNotEqualTo(String value) //
            throws DatasweepException {
        return (MESParamSeqRule0100Filter) forColumnNameNotEqualTo("CL_rule", value);
    }

    /**
     * Generated method definition
     *
     * @param value the value to be filtered for
     * @return the filter object
     * @throws DatasweepException the PC exception
     */
    public MESParamSeqRule0100Filter forRuleContaining(String value) //
            throws DatasweepException {
        return (MESParamSeqRule0100Filter) forColumnNameContaining("CL_rule", value);
    }

    /**
     * Generated method definition
     *
     * @param value the value to be filtered for
     * @return the filter object
     * @throws DatasweepException the PC exception
     */
    public MESParamSeqRule0100Filter forRuleStartingWith(String value) //
            throws DatasweepException {
        return (MESParamSeqRule0100Filter) forColumnNameStartingWith("CL_rule", value);
    }


    /**
     * Generated method definition
     *
     * @param value the value to be filtered for
     * @return the filter object
     * @throws DatasweepException the PC exception
     */
    public MESParamSeqRule0100Filter forComment1EqualTo(String value) //
            throws DatasweepException {
        return (MESParamSeqRule0100Filter) forColumnNameEqualTo("CL_comment1", value);
    }

    /**
     * Generated method definition
     *
     * @param value the value to be filtered for
     * @return the filter object
     * @throws DatasweepException the PC exception
     */
    public MESParamSeqRule0100Filter forComment1NotEqualTo(String value) //
            throws DatasweepException {
        return (MESParamSeqRule0100Filter) forColumnNameNotEqualTo("CL_comment1", value);
    }

    /**
     * Generated method definition
     *
     * @param value the value to be filtered for
     * @return the filter object
     * @throws DatasweepException the PC exception
     */
    public MESParamSeqRule0100Filter forComment1Containing(String value) //
            throws DatasweepException {
        return (MESParamSeqRule0100Filter) forColumnNameContaining("CL_comment1", value);
    }

    /**
     * Generated method definition
     *
     * @param value the value to be filtered for
     * @return the filter object
     * @throws DatasweepException the PC exception
     */
    public MESParamSeqRule0100Filter forComment1StartingWith(String value) //
            throws DatasweepException {
        return (MESParamSeqRule0100Filter) forColumnNameStartingWith("CL_comment1", value);
    }


    /**
     * Generated method definition
     *
     * @param value the value to be filtered for
     * @return the filter object
     * @throws DatasweepException the PC exception
     */
    public MESParamSeqRule0100Filter forComment2EqualTo(String value) //
            throws DatasweepException {
        return (MESParamSeqRule0100Filter) forColumnNameEqualTo("CL_comment2", value);
    }

    /**
     * Generated method definition
     *
     * @param value the value to be filtered for
     * @return the filter object
     * @throws DatasweepException the PC exception
     */
    public MESParamSeqRule0100Filter forComment2NotEqualTo(String value) //
            throws DatasweepException {
        return (MESParamSeqRule0100Filter) forColumnNameNotEqualTo("CL_comment2", value);
    }

    /**
     * Generated method definition
     *
     * @param value the value to be filtered for
     * @return the filter object
     * @throws DatasweepException the PC exception
     */
    public MESParamSeqRule0100Filter forComment2Containing(String value) //
            throws DatasweepException {
        return (MESParamSeqRule0100Filter) forColumnNameContaining("CL_comment2", value);
    }

    /**
     * Generated method definition
     *
     * @param value the value to be filtered for
     * @return the filter object
     * @throws DatasweepException the PC exception
     */
    public MESParamSeqRule0100Filter forComment2StartingWith(String value) //
            throws DatasweepException {
        return (MESParamSeqRule0100Filter) forColumnNameStartingWith("CL_comment2", value);
    }

}
